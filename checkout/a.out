Loading Coverage Information....Done.
Random Seed:89
Loading Change Pool...Done.
Pool:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/pool/letspatch_pool
Preparing patch generation...
Done.
Loading Class - org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
getItemShapeFilled.series(0);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
var0.method0(0)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageSerialization.java:
1
P:IfStatement{statements},L:,R:ReturnStatement{statements}
getItemShapeFilled.series(0);

insert
var0.method0(0)
[]
[var0.method0(var1.method1()), var0.method0(0)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
getItemShapeVisible.series(0);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
var0.method0(0)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageSerialization.java:
1
P:IfStatement{statements},L:,R:ReturnStatement{statements}
getItemShapeVisible.series(0);

insert
var0.method0(0)
[]
[var0.method0(var1.method1()), var0.method0(0)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
getItemLineVisible.series(0);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
var0.method0(0)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageSerialization.java:
1
P:IfStatement{statements},L:,R:ReturnStatement{statements}
getItemLineVisible.series(0);

insert
var0.method0(0)
[]
[var0.method0(var1.method1()), var0.method0(0)]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Number n;

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
Number n;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Line2D line;

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
Line2D line;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
RectangleEdge barBase;

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
RectangleEdge barBase;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot var0;

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
CategoryPlot var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot var0;

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
CategoryPlot var0;

insert
Type0 var0;
[]
[]
===========

now:3
now:4
now:5
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
pc(clone);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
pc(clone);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
iterator(next);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
iterator(next);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getOrientation);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
plot(getOrientation);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
marker(getPaint);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
marker(getPaint);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
coordinates(getX);

at Insert Before
ReturnStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1793
Context:P:IfStatement{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:IfStatement{statements},L:,R:ReturnStatement{statements}
coordinates(getX);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:6
now:7
now:8
now:9
now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
legendItemToolTipGenerator
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
legendItemToolTipGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
urlGeneratorList
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
urlGeneratorList
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
baseItemLabelGenerator
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
baseItemLabelGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
itemLabelGeneratorList
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
itemLabelGeneratorList
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
baseToolTipGenerator
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
baseToolTipGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
plot
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
foregroundAnnotations
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
foregroundAnnotations
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
rowCount
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
rowCount
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
columnCount
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
columnCount
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
backgroundAnnotations
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
backgroundAnnotations
insert
var0
[]
[]
===========

now:2
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
s=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
s=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
row=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
row=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
i=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
i=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
serialVersionUID=1247553218442497391L
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
serialVersionUID=1247553218442497391L
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
visibleSeriesCount=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
visibleSeriesCount=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
CategoryDataset
to
Type0
at line 1796
Applied Change
update
Type0
to
Type0
from
8770_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8770_0/after/Trash.java:
70
P:VariableDeclarationStatement{type},L:,R:VariableDeclarationFragment{fragments}
Type0
update
Type0
to
Type0
[]
[Type0 var0 = var1.method0(var2);, this(var0.method0(var1), var1);, Type0 var0 = new Type0(var1.method0(var2.method1(), var3), var3);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
CategoryDataset
to
Type0
at line 1796
Applied Change
update
Type0
to
Type0
from
8770_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8770_0/after/Trash.java:
70
P:VariableDeclarationStatement{type},L:,R:VariableDeclarationFragment{fragments}
Type0
update
Type0
to
Type0
[]
[Type0 var0 = var1.method0(var2);, this(var0.method0(var1), var1);, Type0 var0 = new Type0(var1.method0(var2.method1(), var3), var3);]
===========

now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x1=Math.round(x1);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x1=Math.round(x1);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x2=Math.round(x2);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x2=Math.round(x2);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x0=Math.round(x0);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x0=Math.round(x0);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

now:2
now:3
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final CategoryPlot var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final CategoryPlot var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final LegendItemCollection var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final LegendItemCollection var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final CategoryDataset var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final CategoryDataset var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final CategoryDataset var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final CategoryDataset var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

now:4
now:5
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double x1;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double x1;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double x0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double x0;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double translatedBase;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double translatedBase;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double translatedValue;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double translatedValue;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double yyOutlier;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double yyOutlier;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

now:6
now:7
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int visibleSeriesCount=0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int visibleSeriesCount=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
short var0=0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
short var0=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
short var0=0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
short var0=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

now:8
now:9
now:10
now:11
now:12
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int seriesCount=dataset.getRowCount();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int seriesCount=dataset.getRowCount();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double value=vm.getValue();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double value=vm.getValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double end=im.getEndValue();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double end=im.getEndValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double start=im.getStartValue();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double start=im.getStartValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double y0=dataArea.getMinY();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double y0=dataArea.getMinY();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

now:13
now:14
now:15
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (item != null) {
  result.add(item);
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 != null) {
      var0.method0(var1);
    }
from
10240_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10240_0/after/QueueMetrics.java:submitApp:8717
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (item != null) {
  result.add(item);
}

insert
if (var0 != null) {
      var0.method0(var1);
    }
[Type0 var0 = method0(var1);, Type0 var0 = method0(var1.method1());]
[this.var0 = var0 != null ? var0.method0() : null, var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (labelPaint != null) {
  item.setLabelPaint(labelPaint);
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 != null) {
      var0.method0(var1);
    }
from
10240_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10240_0/after/QueueMetrics.java:submitApp:8717
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (labelPaint != null) {
  item.setLabelPaint(labelPaint);
}

insert
if (var0 != null) {
      var0.method0(var1);
    }
[Type0 var0 = method0(var1);, Type0 var0 = method0(var1.method1());]
[this.var0 = var0 != null ? var0.method0() : null, var0.method0(var1, var2)]
===========

now:16
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (result == null) {
  result=plot.getRangeAxis();
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 != null) {
      var1 = var0.method0();
    }
from
8569_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8569_0/after/INode.java:getLocalParentDir:8932
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (result == null) {
  result=plot.getRangeAxis();
}

insert
if (var0 != null) {
      var1 = var0.method0();
    }
[]
[Type0 var0 = method0() ? this : method1();, (var0 != null) ? var0.method0() : str0, var0.method0(this)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (cp != null) {
  result=cp.getDrawingSupplier();
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 != null) {
      var1 = var0.method0();
    }
from
8569_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8569_0/after/INode.java:getLocalParentDir:8932
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (cp != null) {
  result=cp.getDrawingSupplier();
}

insert
if (var0 != null) {
      var1 = var0.method0();
    }
[]
[Type0 var0 = method0() ? this : method1();, (var0 != null) ? var0.method0() : str0, var0.method0(this)]
===========

now:17
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double result=Double.NaN;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double result=Double.NaN;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int rowCount=includedRows.length;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int rowCount=includedRows.length;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=var1;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=var1;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

now:18
now:19
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
dataset.getColumnCount()
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
dataset.getColumnCount()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
dataset.getRowCount()
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
dataset.getRowCount()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
dataset.getColumnKeys()
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
dataset.getColumnKeys()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot.getOrientation()
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
plot.getOrientation()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot.getRangeAxis()
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
plot.getRangeAxis()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

now:20
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (dataset == null) {
  throw new CategoryPlot("" + result + "");
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (dataset == null) {
  throw new CategoryPlot("" + result + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (dataset == null) {
  throw new CategoryPlot("" + result + "");
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (dataset == null) {
  throw new CategoryPlot("" + result + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

now:21
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset<?> var0=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryDataset<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection<?> var0=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
LegendItemCollection<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot<?> var0=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryPlot<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset<?> var0=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryDataset<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

now:22
now:23
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateLabel(dataset,row,column);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
generator.generateLabel(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
urlster.generateURL(dataset,row,column);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
urlster.generateURL(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateToolTip(dataset,row,column);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
generator.generateToolTip(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:24
now:25
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
index
to
rowCount
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
99
P:MethodInvocation{arguments},L:SimpleName{name},R:
rowCount
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
index
to
columnCount
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
99
P:MethodInvocation{arguments},L:SimpleName{name},R:
columnCount
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
index
to
s
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
99
P:MethodInvocation{arguments},L:SimpleName{name},R:
s
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
index
to
columnIndex
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
99
P:MethodInvocation{arguments},L:SimpleName{name},R:
columnIndex
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
index
to
AlphaComposite.SRC_OVER
at line 1796
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
99
P:MethodInvocation{arguments},L:SimpleName{name},R:
AlphaComposite.SRC_OVER
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
now:2
now:3
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int seriesCount=dataset.getRowCount();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
short var0 = var1.method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadINode:12396
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int seriesCount=dataset.getRowCount();

insert
short var0 = var1.method0();
[this.var0 = var0, this.var0, final long var0 = var1.method0();]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double value=vm.getValue();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
short var0 = var1.method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadINode:12396
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double value=vm.getValue();

insert
short var0 = var1.method0();
[this.var0 = var0, this.var0, final long var0 = var1.method0();]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double end=im.getEndValue();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
short var0 = var1.method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadINode:12396
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double end=im.getEndValue();

insert
short var0 = var1.method0();
[this.var0 = var0, this.var0, final long var0 = var1.method0();]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double start=im.getStartValue();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
short var0 = var1.method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadINode:12396
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double start=im.getStartValue();

insert
short var0 = var1.method0();
[this.var0 = var0, this.var0, final long var0 = var1.method0();]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double y0=dataArea.getMinY();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
short var0 = var1.method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadINode:12396
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y0=dataArea.getMinY();

insert
short var0 = var1.method0();
[this.var0 = var0, this.var0, final long var0 = var1.method0();]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

now:4
now:5
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final LegendItemCollection[] var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final LegendItemCollection[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final LegendItemCollection[] var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final LegendItemCollection[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

now:6
now:7
now:8
now:9
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot var0=new CategoryPlot(this);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
CategoryPlot var0=new CategoryPlot(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(this);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset var0=new CategoryDataset(this);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
CategoryDataset var0=new CategoryDataset(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot var0=new CategoryPlot(this);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
CategoryPlot var0=new CategoryPlot(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

now:10
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (dataset != null) {
  return result;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 != null) {
      return var0;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:getNameServiceId:25029
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (dataset != null) {
  return result;
}

insert
if (var0 != null) {
      return var0;
    }
[this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = null;, var0.method0(), var0 = var1.method0(var2), var0 = var1.method0(Type0.method1(
            var2, var3)), var0 = var1.method0(var2, var3), Type0 var0 = var1.method0(method1(var2, var3, var4));]
[int var0 = 0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot != null) {
  return plot;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 != null) {
      return var0;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:getNameServiceId:25029
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (plot != null) {
  return plot;
}

insert
if (var0 != null) {
      return var0;
    }
[this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = null;, var0.method0(), var0 = var1.method0(var2), var0 = var1.method0(Type0.method1(
            var2, var3)), var0 = var1.method0(var2, var3), Type0 var0 = var1.method0(method1(var2, var3, var4));]
[int var0 = 0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot != null) {
  return plot;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 != null) {
      return var0;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:getNameServiceId:25029
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (plot != null) {
  return plot;
}

insert
if (var0 != null) {
      return var0;
    }
[this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = null;, var0.method0(), var0 = var1.method0(var2), var0 = var1.method0(Type0.method1(
            var2, var3)), var0 = var1.method0(var2, var3), Type0 var0 = var1.method0(method1(var2, var3, var4));]
[int var0 = 0;]
===========

now:11
now:12
now:13
now:14
now:15
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
s++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
s++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
i++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
i++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
row++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
row++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
i--
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
i--
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
visibleSeriesCount++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
visibleSeriesCount++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

now:16
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double r=getDefaultEntityRadius();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double r=getDefaultEntityRadius();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

now:17
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
findRangeBounds.dataset(false)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
findRangeBounds.dataset(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
setBaseURLGenerator.generator(true)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
setBaseURLGenerator.generator(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
setBaseToolTipGenerator.generator(true)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
setBaseToolTipGenerator.generator(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
setBaseItemLabelGenerator.generator(true)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
setBaseItemLabelGenerator.generator(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

now:18
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=plot.getRangeAxis();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=plot.getRangeAxis();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
bounds=line.getBounds2D();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
bounds=line.getBounds2D();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=cp.getDrawingSupplier();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=cp.getDrawingSupplier();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=getSeriesToolTipGenerator.row();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=getSeriesToolTipGenerator.row();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
selectionState=scd.getSelectionState();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
selectionState=scd.getSelectionState();

insert
var0 = var1.method0()
[]
[]
===========

now:19
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double result=Double.NaN;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double result=Double.NaN;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int rowCount=includedRows.length;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int rowCount=includedRows.length;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

now:20
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getOrientation);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getOrientation);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRangeAxis);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRangeAxis);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRangeAxisEdge);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRangeAxisEdge);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getDomainAxisEdge);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getDomainAxisEdge);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRowRenderingOrder);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRowRenderingOrder);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:21
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int seriesCount=dataset.getRowCount();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int seriesCount=dataset.getRowCount();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double value=vm.getValue();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double value=vm.getValue();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double end=im.getEndValue();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double end=im.getEndValue();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double start=im.getStartValue();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double start=im.getStartValue();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double y0=dataArea.getMinY();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y0=dataArea.getMinY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:22
now:23
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double r=getDefaultEntityRadius();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double r=getDefaultEntityRadius();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=getPassCount();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=getPassCount();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=getRowCount();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=getRowCount();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=getPassCount();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=getPassCount();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:24
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateLabel(dataset,row,column);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateLabel(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
urlster.generateURL(dataset,row,column);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
urlster.generateURL(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateToolTip(dataset,row,column);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateToolTip(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:25
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Number n;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Number n;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Line2D line;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Line2D line;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
RectangleEdge barBase;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
RectangleEdge barBase;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1796
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
CategoryPlot var0;

insert
Type0 var0;
[]
[]
===========

now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
legendItemToolTipGenerator
at line 1795
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
legendItemToolTipGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
urlGeneratorList
at line 1795
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
urlGeneratorList
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
baseItemLabelGenerator
at line 1795
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
baseItemLabelGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
itemLabelGeneratorList
at line 1795
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
itemLabelGeneratorList
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
baseToolTipGenerator
at line 1795
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
baseToolTipGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
plot
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
foregroundAnnotations
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
foregroundAnnotations
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
rowCount
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
rowCount
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
columnCount
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
columnCount
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
backgroundAnnotations
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
backgroundAnnotations
insert
var0
[]
[]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
s=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
s=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
row=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
row=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
i=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
i=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
serialVersionUID=1247553218442497391L
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
serialVersionUID=1247553218442497391L
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
visibleSeriesCount=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
visibleSeriesCount=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

now:1
now:2
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final Composite savedComposite=g2.getComposite();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final Composite savedComposite=g2.getComposite();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

now:3
now:4
now:5
now:6
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (p == null) {
  return null;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (p == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (dataset == null) {
  return null;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (dataset == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (y == null) {
  return null;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (y == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (result == null) {
  return null;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (result == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot == null) {
  return null;
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (plot == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

now:7
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=plot.getRangeAxis();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=plot.getRangeAxis();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=cp.getDrawingSupplier();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=cp.getDrawingSupplier();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
bounds=line.getBounds2D();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
bounds=line.getBounds2D();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=getSeriesToolTipGenerator.row();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=getSeriesToolTipGenerator.row();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
selectionState=scd.getSelectionState();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
selectionState=scd.getSelectionState();

insert
var0 = var1.method0()
[]
[]
===========

now:8
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(plot,true);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(plot,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(plot,true);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(plot,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

now:9
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(marker.getPaint());

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(marker.getPaint());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setStroke(marker.getStroke());

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setStroke(marker.getStroke());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(marker.getLabelPaint());

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(marker.getLabelPaint());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setStroke(im.getOutlineStroke());

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setStroke(im.getOutlineStroke());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(im.getOutlinePaint());

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(im.getOutlinePaint());

insert
var0.method0(var1.method1())
[]
[]
===========

now:10
now:11
now:12
now:13
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * plot;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * plot;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * result;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * result;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * plot;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * plot;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

now:14
now:15
now:16
now:17
now:18
now:19
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateLabel(dataset,row,column);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateLabel(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
urlster.generateURL(dataset,row,column);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
urlster.generateURL(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateToolTip(dataset,row,column);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateToolTip(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:20
now:21
now:22
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Number n;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Number n;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Line2D line;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Line2D line;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
RectangleEdge barBase;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
RectangleEdge barBase;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0;

insert
Type0 var0;
[]
[]
===========

now:23
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(indexOf,dataset);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
plot(indexOf,dataset);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRangeAxis,index);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRangeAxis,index);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getDomainAxisForDataset,datasetIndex);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
plot(getDomainAxisForDataset,datasetIndex);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
getLegendItem(index,i);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
getLegendItem(index,i);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
p(getDataset,datasetIndex);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
p(getDataset,datasetIndex);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

now:24
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean allItemsNull=true;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean allItemsNull=true;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:25
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final double value=dataValue.doubleValue();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final int var0 = var1.method0();
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/PBHelper.java:convert:27782
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final double value=dataValue.doubleValue();

insert
final int var0 = var1.method0();
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, var0[var1] = method0(var2.method1(var1)), var0[var1] = Type0.method0(var2.method1(var1)), var0.method0(var1), var0.method0(Type0.method1(var1.method2(var2))), for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = method0(var3[var0]);
    }, int var0 = 0;, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3[var0]);
    }, for (int var0 = var1; var0 < var2; var0++) {
      var3.method0(method1(var4[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; var0++) {
      Type0 var2 = var3[var0];
      var4.method0(var0, Type1.method1(var2));
      boolean var5 = var6.method2(var2);
      var4.method3(var5);
      if (var5) {
        var6.method4(var2);
      }
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
      var2[var0] = Type0.method1(var1.method2(var0));
    }, for (int var0=0; var0<var1.method0(); var0++) {
      if (var1.method1(var0)) {
        var2.method2(var3[var0]);
      }
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(Type0.method1(var3[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0()
          .method1(Type0.method2(var4[var0])).method3();
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0(var0);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2.method0(Type0.method1(var3.method2(var0)));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = Type0.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
        var2[var0] = Type0.method1(var1.method2(var0));
      }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3[var0]);
    }, var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5())), var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5()))
        .method6(var1.method7())
        .method8(method4((Type0) var1)), new Type0(var0.method0(), var0.method1(),
        method2(var0.method3()), method2(var0.method4())), var0[var1] = method0(var2[var1]), var0.method0()
        .method1(method2(var1.method3())), new Type0(method0(var0.method1()), var0.method2()
        .method3(new Type1[0])), var0.method0(method1(var1)), var0[var1++] = method0(var2), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(var1.method5())
        .method6(method7(var1.method8())), new Type0(var0.method0(),
        var0.method1(), var0.method2(),
        method3(var0.method4()), method5(var0.method6())), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(var1.method6())
        .method7(Type0.method8((Type1) var1)), new Type0(Type1.method0(var0.method1()),
        var0.method2(), var0.method3(),
        var0.method4()), var0.method0().method1(var1.method2())
          .method3(var2)
          .method4(method5((Type0) var1)), new Type0(Type1.method0(var0.method1()),
          var0.method2()), Type0 var0 = Type1.method0((Type2)var1);, Type0 var0 = method0(var1.method1().method2());, new Type0(
        Type1.method0(var0.method1()),
        var0.method2() ? var0.method3() : null , 
        var0.method4(),  var0.method5(),  var0.method6(),
        var0.method7(), var0.method8(), var0.method9(),
        var0.method10(), var0.method11(),
        Type1.method0(var0.method12())), var0.
     method0(Type0.method1((Type1) var1)), var0.
     method0(Type0.method1((Type1) var1)).
     method2(var1.method3()).
     method4(var1.method5()).
     method6(var1.method7()).
     method8(var1.method9()).
     method10(var1.method11()).
     method12(var1.method13()).
     method14(Type0.method1(var1.method15())), method0(var0, 0), var0.method0(method1(var1[var2])), var0.method0(Type0.method1(var1.method2())), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(Type0.method5((Type1)var1)), var0.method0(var1, Type0.method1(var2)), var0.method0(Type0.method1(var1.method2()))
        .method3(Type0.method1(var1.method4())), Type0 var0 = new Type0(Type1.method0(var1.method1()), var2,
        var1.method2(), var1.method3(),
        var3.method4(new Type2[0]));, var0.method0(Type0.method1((Type1) var1)), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3())), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3()))
        .method4(Type0.method1(var1.method5())), new Type0(Type1.method0(var0.method1()),
        Type1.method0(var0.method2()), Type1.method0(var0
            .method3()), var0.method4()), Type0.method0(var0.method1()), var0.method0()
        .method1(Type0.method2(var1.method3())), var0.method0(Type0.method1(var1)), var0.method0(Type0.method1(var1[var2])), var0.method0()
          .method1(Type0.method2(var1[var2])), var0.method0(var1)
          .method1(
              Type0.method2((Type1) var2)), var0
          .method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1).
        method1(Type0.method2((Type1) var2)), new Type0(Type1.method0(var0.method1())), new Type0(
        Type1.method0(var0.method1()),
        var1,
        var0.method2() ? var0.method3() : null), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(0)
        .method6(Type0.method7((Type1)var1)), new Type0(
        var0.method0(), var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4() ? Type1.method5(var0.method6()) : null,
        var0.method7()), new Type0(
        var0.method0(), var0.method1(), 
        var0.method2(), (short) var0.method3(),
        var0.method4(),
        var0.method5(),
        var0.method6(),
        Type1.method7(var0.method8())), var0.method0().
      method1(var1.method2()).
      method3(var1.method4()).
      method5(var1.method6())
      .method7(var1.method8())
      .method9(var1.method10())
      .method11(var1.method12())
      .method13(var1.method14())
      .method15(Type0.method16(var1.method17())), new Type0(
        var0.method0(), var0.method1().method2(var1), 
        var0.method3(), var0.method4(),
        var0.method5(), var0.method6(),
        Type1.method7(var0.method8()), var0.method9(), var0.method10(), 
        var0.method1().method2(var2) ? 
            var0.method11().method12() : null,
        var0.method13().method12(),
        var0.method14()? var0.method15(): var3,
        var0.method16() ? Type1.method7(var0.method17()) : null,
        var0.method18() ? var0.method19() : -1), new Type0(
        var0.method0(),
        var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4(),
        var0.method5(),
        var0.method6().method7(),
        var0.method8(),
        var0.method9(),
        var1.method10(),
        var1.method11(),
        var1.method12().method7()), var0.method0().
      method1(var1.method2()).
      method3(var2).
      method4(var1.method5()).
      method6(var1.method7()).
      method8(var1.method9()).
      method10(var1.method11()).
      method12(Type0.method13(var1.method14())), Type0 var0 = method0(var1.method1());, var0[var1] = Type0.method0(var2[var1]), var0.method0().
        method1(var1.method2(
            Type0.method3(var2.method4()))), new Type0(var0.method0(), Type1.method1(var0.method2())), Type0 var0 = method0(var1);, var0.method0(method1(var1.method2())), Type0 var0 = Type1.method0(var1.method1());, var0.method0().method1(method2(var1.method3())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7()))
          .method8(method2(var1.method9())), new Type0().method0(method1(var0.method2())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6()))
          .method7(method1(var0.method8()))]
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, Type0<Type1> var0 =
        var1.method0(var2.method1(var3.method2()));]
===========

now:1
now:2
now:3
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getDomainAxisForDataset,datasetIndex);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getDomainAxisForDataset,datasetIndex);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(indexOf,dataset);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(indexOf,dataset);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRangeAxis,index);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRangeAxis,index);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
p(getDataset,datasetIndex);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
p(getDataset,datasetIndex);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
getLegendItem(index,i);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
getLegendItem(index,i);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

now:4
now:5
now:6
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
s++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
s++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
i++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
i++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
row++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
row++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
i--
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
i--
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
visibleSeriesCount++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
visibleSeriesCount++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

now:7
now:8
now:9
now:10
now:11
now:12
now:13
now:14
now:15
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot var0=new CategoryPlot(this);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
CategoryPlot var0=new CategoryPlot(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(this);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset var0=new CategoryDataset(this);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
CategoryDataset var0=new CategoryDataset(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset var0=new CategoryDataset(this);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
CategoryDataset var0=new CategoryDataset(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

now:16
now:17
now:18
now:19
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double r=getDefaultEntityRadius();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double r=getDefaultEntityRadius();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

now:20
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
findRangeBounds.dataset(false)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
findRangeBounds.dataset(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
setBaseURLGenerator.generator(true)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
setBaseURLGenerator.generator(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
setBaseToolTipGenerator.generator(true)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
setBaseToolTipGenerator.generator(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
setBaseItemLabelGenerator.generator(true)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
setBaseItemLabelGenerator.generator(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

now:21
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=plot.getRangeAxis();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=plot.getRangeAxis();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
bounds=line.getBounds2D();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
bounds=line.getBounds2D();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=cp.getDrawingSupplier();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=cp.getDrawingSupplier();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=getSeriesToolTipGenerator.row();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=getSeriesToolTipGenerator.row();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
selectionState=scd.getSelectionState();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
selectionState=scd.getSelectionState();

insert
var0 = var1.method0()
[]
[]
===========

now:22
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double result=Double.NaN;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double result=Double.NaN;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int rowCount=includedRows.length;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int rowCount=includedRows.length;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=var1;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int var0=var1;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

now:23
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getOrientation);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getOrientation);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRangeAxis);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRangeAxis);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRangeAxisEdge);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRangeAxisEdge);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getDomainAxisEdge);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getDomainAxisEdge);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRowRenderingOrder);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRowRenderingOrder);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:24
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double value=vm.getValue();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double value=vm.getValue();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double end=im.getEndValue();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double end=im.getEndValue();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double start=im.getStartValue();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double start=im.getStartValue();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int seriesCount=dataset.getRowCount();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int seriesCount=dataset.getRowCount();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double y0=dataArea.getMinY();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1795
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y0=dataArea.getMinY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:25
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
legendItemToolTipGenerator
at line 1792
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
legendItemToolTipGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
urlGeneratorList
at line 1792
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
urlGeneratorList
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
baseItemLabelGenerator
at line 1792
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
baseItemLabelGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
itemLabelGeneratorList
at line 1792
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
itemLabelGeneratorList
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
plot
to
baseToolTipGenerator
at line 1792
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
baseToolTipGenerator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
assert plot != null;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
assert var0 != null;
from
8179_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8179_0/after/NNHAServiceTarget.java:NNHAServiceTarget:1904
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
assert plot != null;

insert
assert var0 != null;
[this.var0 = var0, this.var0]
[Type0 var0 = 
      var1.method0(var2, var3, var4);, this.var0 = var0, this.var0]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
assert result != null;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
assert var0 != null;
from
8179_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8179_0/after/NNHAServiceTarget.java:NNHAServiceTarget:1904
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
assert result != null;

insert
assert var0 != null;
[this.var0 = var0, this.var0]
[Type0 var0 = 
      var1.method0(var2, var3, var4);, this.var0 = var0, this.var0]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
assert SortOrder.ASCENDING != null;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
assert var0 != null;
from
8179_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8179_0/after/NNHAServiceTarget.java:NNHAServiceTarget:1904
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
assert SortOrder.ASCENDING != null;

insert
assert var0 != null;
[this.var0 = var0, this.var0]
[Type0 var0 = 
      var1.method0(var2, var3, var4);, this.var0 = var0, this.var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
assert labelOffsetType != null;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
assert var0 != null;
from
8179_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8179_0/after/NNHAServiceTarget.java:NNHAServiceTarget:1904
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
assert labelOffsetType != null;

insert
assert var0 != null;
[this.var0 = var0, this.var0]
[Type0 var0 = 
      var1.method0(var2, var3, var4);, this.var0 = var0, this.var0]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
assert PlotOrientation.VERTICAL != null;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
assert var0 != null;
from
8179_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8179_0/after/NNHAServiceTarget.java:NNHAServiceTarget:1904
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
assert PlotOrientation.VERTICAL != null;

insert
assert var0 != null;
[this.var0 = var0, this.var0]
[Type0 var0 = 
      var1.method0(var2, var3, var4);, this.var0 = var0, this.var0]
===========

now:2
now:3
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(indexOf,dataset);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
plot(indexOf,dataset);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getRangeAxis,index);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
plot(getRangeAxis,index);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
plot(getDomainAxisForDataset,datasetIndex);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
plot(getDomainAxisForDataset,datasetIndex);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result(add,item);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result(add,item);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
getLegendItem(index,i);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
getLegendItem(index,i);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

now:4
now:5
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final Composite savedComposite=g2.getComposite();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final Composite savedComposite=g2.getComposite();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

now:6
now:7
now:8
now:9
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (p == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (p == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (dataset == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (dataset == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (y == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (y == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (plot == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (result == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (result == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

now:10
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=plot.getRangeAxis();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=plot.getRangeAxis();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=cp.getDrawingSupplier();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=cp.getDrawingSupplier();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=getSeriesToolTipGenerator.row();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=getSeriesToolTipGenerator.row();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
bounds=line.getBounds2D();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
bounds=line.getBounds2D();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
selectionState=scd.getSelectionState();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
selectionState=scd.getSelectionState();

insert
var0 = var1.method0()
[]
[]
===========

now:11
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(plot,true);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(plot,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(plot,true);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(plot,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

now:12
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(marker.getPaint());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(marker.getPaint());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setStroke(marker.getStroke());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setStroke(marker.getStroke());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(marker.getLabelPaint());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(marker.getLabelPaint());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setStroke(im.getOutlineStroke());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setStroke(im.getOutlineStroke());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(im.getOutlinePaint());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(im.getOutlinePaint());

insert
var0.method0(var1.method1())
[]
[]
===========

now:13
now:14
now:15
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * result;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * result;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * plot;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * plot;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * result;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * result;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

now:16
now:17
now:18
now:19
now:20
now:21
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateLabel(dataset,row,column);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateLabel(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
urlster.generateURL(dataset,row,column);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
urlster.generateURL(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateToolTip(dataset,row,column);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateToolTip(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:22
now:23
now:24
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Number n;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Number n;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Line2D line;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Line2D line;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
RectangleEdge barBase;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
RectangleEdge barBase;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0;

insert
Type0 var0;
[]
[]
===========

now:25
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean allItemsNull=true;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean allItemsNull=true;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean var0=false;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean var0=false;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new RuntimeException("Unknown layer.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new RuntimeException("Unknown layer.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new RuntimeException("Not implemented.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new RuntimeException("Not implemented.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new IllegalArgumentException("Null 'hotspot' argument.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'hotspot' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new IllegalArgumentException("Null 'generator' argument.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'generator' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new IllegalArgumentException("Null 'annotation' argument.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'annotation' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

now:2
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  return result;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return result;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

now:3
now:4
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (rowCount != 0) {
  columnCount--;
  rowCount=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (rowCount != 0) {
  columnCount--;
  rowCount=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (index != 0) {
  seriesCount--;
  index=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (index != 0) {
  seriesCount--;
  index=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (rowCount != 0) {
  seriesCount--;
  rowCount=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (rowCount != 0) {
  seriesCount--;
  rowCount=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (index != 0) {
  columnCount--;
  index=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (index != 0) {
  columnCount--;
  index=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (rowCount != 0) {
  columnCount--;
  rowCount=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (rowCount != 0) {
  columnCount--;
  rowCount=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

now:5
now:6
now:7
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  removed=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  removed=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  negative=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  negative=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  includeInterval=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  includeInterval=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  selected=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  selected=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  notify=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  notify=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

now:8
now:9
now:10
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.max=value(doubleValue);
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        this.var0 = method0(var1);
      }
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/FSEditLogOp.java:
4
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.max=value(doubleValue);
}

insert
{
        this.var0 = method0(var1);
      }
[this.var0 = var1.method0(), this.var0 = var1.method0(var2), this.var0 = method0(var1), var0.method0(var1), method0(var0), var0 = var1.method0(), var0.method0(var1.method1()), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = var1.method0(var2.method1(str0))]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.min=value(doubleValue);
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        this.var0 = method0(var1);
      }
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/FSEditLogOp.java:
4
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.min=value(doubleValue);
}

insert
{
        this.var0 = method0(var1);
      }
[this.var0 = var1.method0(), this.var0 = var1.method0(var2), this.var0 = method0(var1), var0.method0(var1), method0(var0), var0 = var1.method0(), var0.method0(var1.method1()), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = var1.method0(var2.method1(str0))]
[]
===========

now:11
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.rowCount=dataset(getRowCount);
  this.columnCount=dataset(getColumnCount);
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        this.var0 = method0(var1);
        this.var2 = method0(var1);
      }
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/FSEditLogOp.java:
4
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.rowCount=dataset(getRowCount);
  this.columnCount=dataset(getColumnCount);
}

insert
{
        this.var0 = method0(var1);
        this.var2 = method0(var1);
      }
[this.var0 = var0, this.var0 = var1.method0(var2), this.var0 = method0(var1), this.var0 = 0, this.var0 = var1.method0(var2.method1(str0)), this.var0 = var1.method0(), var0.method0(var1), method0(var0), var0 = var1.method0(), var0.method0(var1.method1()), this.var0 = new Type0(
            new Type1(var0, this.var1))]
[]
===========

now:12
now:13
now:14
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.TOP;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.TOP;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.LEFT;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.LEFT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.RIGHT;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.RIGHT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.BOTTOM;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.BOTTOM;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.selectionState=state;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.selectionState=state;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.barWidth=width;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.barWidth=width;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.crosshairState=state;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.crosshairState=state;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.medianVisible=visible;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.medianVisible=visible;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.seriesRunningTotal=total;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.seriesRunningTotal=total;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

now:17
now:18
now:19
now:20
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

now:21
now:22
now:23
now:24
now:25
now:1
now:2
now:3
now:4
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot == null) {
  throw new AlphaComposite("" + result + "");
}

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (plot == null) {
  throw new AlphaComposite("" + result + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (result == null) {
  throw new Layer("" + plot + "");
}

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (result == null) {
  throw new Layer("" + plot + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (result == null) {
  throw new PlotOrientation("" + plot + "");
}

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (result == null) {
  throw new PlotOrientation("" + plot + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (result == null) {
  throw new AbstractCategoryItemRenderer("" + plot + "");
}

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (result == null) {
  throw new AbstractCategoryItemRenderer("" + plot + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot == null) {
  throw new PlotOrientation("" + result + "");
}

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (plot == null) {
  throw new PlotOrientation("" + result + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

now:5
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot<?> var0=null;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryPlot<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot<?> var0=null;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryPlot<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

now:6
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateLabel(dataset,row,column);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
generator.generateLabel(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
urlster.generateURL(dataset,row,column);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
urlster.generateURL(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateToolTip(dataset,row,column);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
generator.generateToolTip(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:7
now:8
now:9
now:10
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
String label=generator.generateLabel(dataset,row,column);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 =
        var1.method0(var2, var3, var4);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/JobHistoryEventHandler.java:setupEventWriter:10154
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
String label=generator.generateLabel(dataset,row,column);

insert
Type0 var0 =
        var1.method0(var2, var3, var4);
[Type0 var0 = var1.method0(var2);, Type0 var0 = (var1 == null) ? null : var2;, this.var0 = var0]
[Type0 var0 = var1.method0(var2).method1();, Type0 var0 = var1.method0(
        var2, var3, var4);, Type0 var0 = var1.method0();, this.var0 = var0, Type0 var0 = var1.method0(var2, true);, var0 = var1.method0(var2, true), Type0 var0 = (var1 == null) ? null : var2;, try {
        Type0 var0 = var1.method0(var2, true);
        var3 = new Type1(var0);
        var4.method1(str0 + var5 + str1
            + var2);
      } catch (Type2 var6) {
        var4.method1(str2 + var2 + str3
            + str4 + var7 + str5);
        throw var6;
      }, try {
          Type0 var0 =
              (Type0) var1.method0();
          method1(var1.method2(), var0);
        } catch (Type1 var2) {
          var3.method3(str0 + var1,
              var2);
          throw new Type2(var2);
        }, var0.method0(str0
            + var1
            + str1
            + var2), var0.method0(str0 + var1.method1().method2()
            + str1 + var2.method2()), var0.method0(str0 + var1.method1()
              + str1 + var1), var0.method0(str0 + var1 + str1), var0.method0(str0), var0.method0(str0, var1), var0.method0(str0 + var1.method1()), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1 + str1
            + str2 + var2 + str3), var0.method0(str0
            + var1.method1().method2()), var0.method0(str0
          + var1 + str1, var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1.method1() + str1 + var2.method1()), var0.method0(str0 + var1)]
===========

now:11
now:12
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
RectangleEdge barBase=RectangleEdge.LEFT;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadDirectory:9620
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
RectangleEdge barBase=RectangleEdge.LEFT;

insert
Type0 var0 = var1;
[Type0 var0 = var1.method0(var2);, byte[][] var0 = {{}};, var0 = var1.method0(var2), final Type0 var0 = var1.method0(var2);]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=var1;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadDirectory:9620
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
LegendItemCollection var0=var1;

insert
Type0 var0 = var1;
[Type0 var0 = var1.method0(var2);, byte[][] var0 = {{}};, var0 = var1.method0(var2), final Type0 var0 = var1.method0(var2);]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=var1;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadDirectory:9620
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
LegendItemCollection var0=var1;

insert
Type0 var0 = var1;
[Type0 var0 = var1.method0(var2);, byte[][] var0 = {{}};, var0 = var1.method0(var2), final Type0 var0 = var1.method0(var2);]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

now:13
now:14
now:15
now:16
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x1=Math.round(x1);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x1=Math.round(x1);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x2=Math.round(x2);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x2=Math.round(x2);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x0=Math.round(x0);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x0=Math.round(x0);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

now:17
now:18
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final CategoryPlot var0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final CategoryPlot var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final LegendItemCollection var0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final LegendItemCollection var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final LegendItemCollection var0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final LegendItemCollection var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

now:19
now:20
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double x1;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double x1;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double x0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double x0;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double translatedBase;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double translatedBase;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double translatedValue;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double translatedValue;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double yyOutlier;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double yyOutlier;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

now:21
now:22
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int visibleSeriesCount=0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int visibleSeriesCount=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
short var0=0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
short var0=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
short var0=0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
short var0=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

now:23
now:24
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double value=vm.getValue();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double value=vm.getValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double end=im.getEndValue();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double end=im.getEndValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double start=im.getStartValue();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double start=im.getStartValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double y0=dataArea.getMinY();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double y0=dataArea.getMinY();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double x0=dataArea.getMinX();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1792
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double x0=dataArea.getMinX();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

now:25
now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
dataset
to
label
at line 1797
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
171
P:InfixExpression{leftOperand},L:,R:NullLiteral{rightOperand}
label
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
dataset
to
generator
at line 1797
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
171
P:InfixExpression{leftOperand},L:,R:NullLiteral{rightOperand}
generator
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
dataset
to
item
at line 1797
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
171
P:InfixExpression{leftOperand},L:,R:NullLiteral{rightOperand}
item
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
dataset
to
cri
at line 1797
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
171
P:InfixExpression{leftOperand},L:,R:NullLiteral{rightOperand}
cri
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
dataset
to
cp
at line 1797
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
171
P:InfixExpression{leftOperand},L:,R:NullLiteral{rightOperand}
cp
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
now:2
now:3
now:4
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
dataset(getRowKey,series);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
dataset(getRowKey,series);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
dataset(getRowKey,s);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
dataset(getRowKey,s);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
dataset(getRowKey,row);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
dataset(getRowKey,row);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
dataset(getColumnKey,column);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
dataset(getColumnKey,column);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
p(getDataset,datasetIndex);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
p(getDataset,datasetIndex);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

now:5
now:6
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final Composite savedComposite=g2.getComposite();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final Composite savedComposite=g2.getComposite();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

now:7
now:8
now:9
now:10
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (dataset == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (dataset == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (p == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (p == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (y == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (y == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

now:11
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=plot.getRangeAxis();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=plot.getRangeAxis();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=cp.getDrawingSupplier();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=cp.getDrawingSupplier();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
result=getSeriesToolTipGenerator.row();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=getSeriesToolTipGenerator.row();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
bounds=line.getBounds2D();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
bounds=line.getBounds2D();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
selectionState=scd.getSelectionState();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
selectionState=scd.getSelectionState();

insert
var0 = var1.method0()
[]
[]
===========

now:12
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(dataset,true);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(dataset,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=new LegendItemCollection(dataset,true);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
LegendItemCollection var0=new LegendItemCollection(dataset,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

now:13
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(marker.getPaint());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(marker.getPaint());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setStroke(marker.getStroke());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setStroke(marker.getStroke());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(marker.getLabelPaint());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(marker.getLabelPaint());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setStroke(im.getOutlineStroke());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setStroke(im.getOutlineStroke());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
g2.setPaint(im.getOutlinePaint());

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2.setPaint(im.getOutlinePaint());

insert
var0.method0(var1.method1())
[]
[]
===========

now:14
now:15
now:16
now:17
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * dataset;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * dataset;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final long var0=AbstractCategoryItemRenderer.serialVersionUID * dataset;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final long var0 = var1 * var2;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/BlockPlacementPolicyDefault.java:isGoodTarget:23975
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final long var0=AbstractCategoryItemRenderer.serialVersionUID * dataset;

insert
final long var0 = var1 * var2;
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, this.var0 = var1.method0(
        var2, 
        var3), var0.method0(this.var1), method0(var0, str0)]
[for (Type0 var0:var1) {
      // add localMachine and related nodes to excludedNodes
      method0(var0, var2);
    }, for (Type0 var0 : var1) {
          var2.method0(var0);
        }, for(Type0 var0 : method0(var1, var2)) {
      long var3 = var0.method1();
      long var4 = var0.method2();
      if(var4 < var5) {
        var5 = var4;
        var6 = var0;
      }
      if (var7 > var3) {
        var7 = var3;
        var8 = var0;
      }
    }, long var0 = var1.method0() - 
                     (var1.method1() * var2);, long var0 = var1.method0();, var0.method0() * var1]
===========

now:18
now:19
now:20
now:21
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateLabel(dataset,row,column);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateLabel(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
urlster.generateURL(dataset,row,column);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
urlster.generateURL(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
generator.generateToolTip(dataset,row,column);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
generator.generateToolTip(dataset,row,column);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
DatasetUtilities.findRangeBounds(dataset,visibleSeriesKeys,includeInterval);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:22
now:23
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Number n;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Number n;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
Line2D line;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Line2D line;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
RectangleEdge barBase;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
RectangleEdge barBase;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset var0;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
CategoryDataset var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset var0;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
CategoryDataset var0;

insert
Type0 var0;
[]
[]
===========

now:24
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean allItemsNull=true;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean allItemsNull=true;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean var0=false;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
boolean var0=false;

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:25
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final double value=dataValue.doubleValue();

at Insert After
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final int var0 = var1.method0();
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/PBHelper.java:convert:27782
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final double value=dataValue.doubleValue();

insert
final int var0 = var1.method0();
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, var0[var1] = method0(var2.method1(var1)), var0[var1] = Type0.method0(var2.method1(var1)), var0.method0(var1), var0.method0(Type0.method1(var1.method2(var2))), for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = method0(var3[var0]);
    }, int var0 = 0;, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3[var0]);
    }, for (int var0 = var1; var0 < var2; var0++) {
      var3.method0(method1(var4[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; var0++) {
      Type0 var2 = var3[var0];
      var4.method0(var0, Type1.method1(var2));
      boolean var5 = var6.method2(var2);
      var4.method3(var5);
      if (var5) {
        var6.method4(var2);
      }
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
      var2[var0] = Type0.method1(var1.method2(var0));
    }, for (int var0=0; var0<var1.method0(); var0++) {
      if (var1.method1(var0)) {
        var2.method2(var3[var0]);
      }
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(Type0.method1(var3[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0()
          .method1(Type0.method2(var4[var0])).method3();
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0(var0);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2.method0(Type0.method1(var3.method2(var0)));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = Type0.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
        var2[var0] = Type0.method1(var1.method2(var0));
      }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3[var0]);
    }, var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5())), var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5()))
        .method6(var1.method7())
        .method8(method4((Type0) var1)), new Type0(var0.method0(), var0.method1(),
        method2(var0.method3()), method2(var0.method4())), var0[var1] = method0(var2[var1]), var0.method0()
        .method1(method2(var1.method3())), new Type0(method0(var0.method1()), var0.method2()
        .method3(new Type1[0])), var0.method0(method1(var1)), var0[var1++] = method0(var2), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(var1.method5())
        .method6(method7(var1.method8())), new Type0(var0.method0(),
        var0.method1(), var0.method2(),
        method3(var0.method4()), method5(var0.method6())), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(var1.method6())
        .method7(Type0.method8((Type1) var1)), new Type0(Type1.method0(var0.method1()),
        var0.method2(), var0.method3(),
        var0.method4()), var0.method0().method1(var1.method2())
          .method3(var2)
          .method4(method5((Type0) var1)), new Type0(Type1.method0(var0.method1()),
          var0.method2()), Type0 var0 = Type1.method0((Type2)var1);, Type0 var0 = method0(var1.method1().method2());, new Type0(
        Type1.method0(var0.method1()),
        var0.method2() ? var0.method3() : null , 
        var0.method4(),  var0.method5(),  var0.method6(),
        var0.method7(), var0.method8(), var0.method9(),
        var0.method10(), var0.method11(),
        Type1.method0(var0.method12())), var0.
     method0(Type0.method1((Type1) var1)), var0.
     method0(Type0.method1((Type1) var1)).
     method2(var1.method3()).
     method4(var1.method5()).
     method6(var1.method7()).
     method8(var1.method9()).
     method10(var1.method11()).
     method12(var1.method13()).
     method14(Type0.method1(var1.method15())), method0(var0, 0), var0.method0(method1(var1[var2])), var0.method0(Type0.method1(var1.method2())), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(Type0.method5((Type1)var1)), var0.method0(var1, Type0.method1(var2)), var0.method0(Type0.method1(var1.method2()))
        .method3(Type0.method1(var1.method4())), Type0 var0 = new Type0(Type1.method0(var1.method1()), var2,
        var1.method2(), var1.method3(),
        var3.method4(new Type2[0]));, var0.method0(Type0.method1((Type1) var1)), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3())), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3()))
        .method4(Type0.method1(var1.method5())), new Type0(Type1.method0(var0.method1()),
        Type1.method0(var0.method2()), Type1.method0(var0
            .method3()), var0.method4()), Type0.method0(var0.method1()), var0.method0()
        .method1(Type0.method2(var1.method3())), var0.method0(Type0.method1(var1)), var0.method0(Type0.method1(var1[var2])), var0.method0()
          .method1(Type0.method2(var1[var2])), var0.method0(var1)
          .method1(
              Type0.method2((Type1) var2)), var0
          .method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1).
        method1(Type0.method2((Type1) var2)), new Type0(Type1.method0(var0.method1())), new Type0(
        Type1.method0(var0.method1()),
        var1,
        var0.method2() ? var0.method3() : null), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(0)
        .method6(Type0.method7((Type1)var1)), new Type0(
        var0.method0(), var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4() ? Type1.method5(var0.method6()) : null,
        var0.method7()), new Type0(
        var0.method0(), var0.method1(), 
        var0.method2(), (short) var0.method3(),
        var0.method4(),
        var0.method5(),
        var0.method6(),
        Type1.method7(var0.method8())), var0.method0().
      method1(var1.method2()).
      method3(var1.method4()).
      method5(var1.method6())
      .method7(var1.method8())
      .method9(var1.method10())
      .method11(var1.method12())
      .method13(var1.method14())
      .method15(Type0.method16(var1.method17())), new Type0(
        var0.method0(), var0.method1().method2(var1), 
        var0.method3(), var0.method4(),
        var0.method5(), var0.method6(),
        Type1.method7(var0.method8()), var0.method9(), var0.method10(), 
        var0.method1().method2(var2) ? 
            var0.method11().method12() : null,
        var0.method13().method12(),
        var0.method14()? var0.method15(): var3,
        var0.method16() ? Type1.method7(var0.method17()) : null,
        var0.method18() ? var0.method19() : -1), new Type0(
        var0.method0(),
        var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4(),
        var0.method5(),
        var0.method6().method7(),
        var0.method8(),
        var0.method9(),
        var1.method10(),
        var1.method11(),
        var1.method12().method7()), var0.method0().
      method1(var1.method2()).
      method3(var2).
      method4(var1.method5()).
      method6(var1.method7()).
      method8(var1.method9()).
      method10(var1.method11()).
      method12(Type0.method13(var1.method14())), Type0 var0 = method0(var1.method1());, var0[var1] = Type0.method0(var2[var1]), var0.method0().
        method1(var1.method2(
            Type0.method3(var2.method4()))), new Type0(var0.method0(), Type1.method1(var0.method2())), Type0 var0 = method0(var1);, var0.method0(method1(var1.method2())), Type0 var0 = Type1.method0(var1.method1());, var0.method0().method1(method2(var1.method3())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7()))
          .method8(method2(var1.method9())), new Type0().method0(method1(var0.method2())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6()))
          .method7(method1(var0.method8()))]
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, Type0<Type1> var0 =
        var1.method0(var2.method1(var3.method2()));]
===========

now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new RuntimeException("Unknown layer.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new RuntimeException("Unknown layer.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new RuntimeException("Not implemented.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new RuntimeException("Not implemented.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new IllegalArgumentException("Null 'hotspot' argument.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'hotspot' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new IllegalArgumentException("Null 'generator' argument.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'generator' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  throw new IllegalArgumentException("Null 'annotation' argument.");
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'annotation' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

now:2
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  return result;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return result;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

now:3
now:4
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (columnCount != 0) {
  seriesCount--;
  columnCount=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (columnCount != 0) {
  seriesCount--;
  columnCount=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (columnCount != 0) {
  index--;
  columnCount=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (columnCount != 0) {
  index--;
  columnCount=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (seriesCount != 0) {
  rowCount--;
  seriesCount=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (seriesCount != 0) {
  rowCount--;
  seriesCount=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (rowCount != 0) {
  columnCount--;
  rowCount=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (rowCount != 0) {
  columnCount--;
  rowCount=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (index != 0) {
  columnCount--;
  index=0;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (index != 0) {
  columnCount--;
  index=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

now:5
now:6
now:7
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  negative=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  negative=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  notify=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  notify=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  selected=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  selected=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  includeInterval=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  includeInterval=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  removed=true;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  removed=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

now:8
now:9
now:10
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.max=value(doubleValue);
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        this.var0 = method0(var1);
      }
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/FSEditLogOp.java:
4
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.max=value(doubleValue);
}

insert
{
        this.var0 = method0(var1);
      }
[this.var0 = var1.method0(), this.var0 = var1.method0(var2), this.var0 = method0(var1), var0.method0(var1), method0(var0), var0 = var1.method0(), var0.method0(var1.method1()), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = var1.method0(var2.method1(str0))]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.min=value(doubleValue);
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        this.var0 = method0(var1);
      }
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/FSEditLogOp.java:
4
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.min=value(doubleValue);
}

insert
{
        this.var0 = method0(var1);
      }
[this.var0 = var1.method0(), this.var0 = var1.method0(var2), this.var0 = method0(var1), var0.method0(var1), method0(var0), var0 = var1.method0(), var0.method0(var1.method1()), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = var1.method0(var2.method1(str0))]
[]
===========

now:11
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.rowCount=dataset(getRowCount);
  this.columnCount=dataset(getColumnCount);
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        this.var0 = method0(var1);
        this.var2 = method0(var1);
      }
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/FSEditLogOp.java:
4
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.rowCount=dataset(getRowCount);
  this.columnCount=dataset(getColumnCount);
}

insert
{
        this.var0 = method0(var1);
        this.var2 = method0(var1);
      }
[this.var0 = var0, this.var0 = var1.method0(var2), this.var0 = method0(var1), this.var0 = 0, this.var0 = var1.method0(var2.method1(str0)), this.var0 = var1.method0(), var0.method0(var1), method0(var0), var0 = var1.method0(), var0.method0(var1.method1()), this.var0 = new Type0(
            new Type1(var0, this.var1))]
[]
===========

now:12
now:13
now:14
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.TOP;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.TOP;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.LEFT;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.LEFT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.RIGHT;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.RIGHT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  barBase=RectangleEdge.BOTTOM;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  barBase=RectangleEdge.BOTTOM;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.selectionState=state;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.selectionState=state;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.barWidth=width;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.barWidth=width;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.crosshairState=state;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.crosshairState=state;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.medianVisible=visible;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.medianVisible=visible;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  this.seriesRunningTotal=total;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.seriesRunningTotal=total;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

now:17
now:18
now:19
now:20
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

now:21
now:22
now:23
now:24
now:25
now:1
now:2
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryPlot<?> var0=null;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryPlot<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset<?> var0=null;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryDataset<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset<?> var0=null;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0<?> var0 = null;
from
8632_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8632_0/after/Configuration.java:getClassByNameOrNull:51162
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryDataset<?> var0=null;

insert
Type0<?> var0 = null;
[var0 = var1.method0(
          new Type0<Type1, Type2<?>>()), this.var0 = var1, this.var0 = var0, Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), Type0<Type1, Type2<?>> var0;, var0.method0(var1, var2), var0.method0(this, null), var0.method0(var1, new Type0[] {str0}), var0.method0(var1, new Type0[] {var2}), var0.method0((Type0) var1.method1(), (Type0) var1.method2()), var0.method0(var1.method1(), var1.method2())]
[Type0 var0 = var1.method0(var2);, var0.method0(var1) != null, var0 = (var1.method0(var2) != null ) ? 
        new Type0 [] {var1.method0(var2)} : null, var0 = var1.method0(var2[0]), Type0 var0 = method0(var1);, method0(var0) == null, final Type0 var0 = method0(var1);, Type0[] var0 = var1.method0(var2);, new Type0(method0(var0, var1)), final Type0 var0 = method0(var1, var2);, var0 = var1.method0(var2), Type0<?> var0 = var1.method0(var2);, var0.method0(var1, var2.method1(var1)), Type0 var0 = method0(var1, var2.method1(var3), var4);, var0.method0(str0, 
                                       var1.method1((Type1) var2.method2())), Type0[] var0 = var1.method0(var2.method1());, var0.method0(var1, 
          var2.method1(var3.method2())), this.var0 = var0, Type0 var0 = var1;, Type0 var0 = (Type0)var1.method0();, Type0<Type1, Type2<?>> var0;]
===========

now:3
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
String label=generator.generateLabel(dataset,row,column);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 =
        var1.method0(var2, var3, var4);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/JobHistoryEventHandler.java:setupEventWriter:10154
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
String label=generator.generateLabel(dataset,row,column);

insert
Type0 var0 =
        var1.method0(var2, var3, var4);
[Type0 var0 = var1.method0(var2);, Type0 var0 = (var1 == null) ? null : var2;, this.var0 = var0]
[Type0 var0 = var1.method0(var2).method1();, Type0 var0 = var1.method0(
        var2, var3, var4);, Type0 var0 = var1.method0();, this.var0 = var0, Type0 var0 = var1.method0(var2, true);, var0 = var1.method0(var2, true), Type0 var0 = (var1 == null) ? null : var2;, try {
        Type0 var0 = var1.method0(var2, true);
        var3 = new Type1(var0);
        var4.method1(str0 + var5 + str1
            + var2);
      } catch (Type2 var6) {
        var4.method1(str2 + var2 + str3
            + str4 + var7 + str5);
        throw var6;
      }, try {
          Type0 var0 =
              (Type0) var1.method0();
          method1(var1.method2(), var0);
        } catch (Type1 var2) {
          var3.method3(str0 + var1,
              var2);
          throw new Type2(var2);
        }, var0.method0(str0
            + var1
            + str1
            + var2), var0.method0(str0 + var1.method1().method2()
            + str1 + var2.method2()), var0.method0(str0 + var1.method1()
              + str1 + var1), var0.method0(str0 + var1 + str1), var0.method0(str0), var0.method0(str0, var1), var0.method0(str0 + var1.method1()), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1 + str1
            + str2 + var2 + str3), var0.method0(str0
            + var1.method1().method2()), var0.method0(str0
          + var1 + str1, var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1.method1() + str1 + var2.method1()), var0.method0(str0 + var1)]
===========

now:4
now:5
now:6
now:7
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int seriesCount=dataset.getRowCount();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int seriesCount=dataset.getRowCount();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double value=vm.getValue();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double value=vm.getValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double end=im.getEndValue();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double end=im.getEndValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double start=im.getStartValue();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double start=im.getStartValue();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double y0=dataArea.getMinY();

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
boolean var0 = var1.method0();
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/MRAppMaster.java:init:8732
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double y0=dataArea.getMinY();

insert
boolean var0 = var1.method0();
[this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(var1, false)
        || var0.method0(var2, false)]
[var0 = var1.method0(), var0.method0(var1, false)
         && var2.method1() > 1, var0.method0(), this.var0 = var1, this.var0, Type0 var0 = new Type0(new Type1());, var0.method0(var1, false)
        || var0.method0(var2, false), Type0 var0 = new Type1(var1, var2);, method0(var0), this.var0 = var0, var0.method0(str0 + var1), var0.method0(str0), var0.method0(str0 + var1 + str1
            + var2), var0.method0(str0 + var1.method1()
              + str1
              + var1.method2()), var0.method0(str0 + var1.method1()
               + str1), var0.method0(str0
               + str1 + var1.method1() + str2)]
===========

now:8
now:9
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot == null) {
  throw new CategoryDataset("" + result + "");
}

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (plot == null) {
  throw new CategoryDataset("" + result + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
if (plot == null) {
  throw new CategoryDataset("" + result + "");
}

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:processDoneFiles:26030
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
if (plot == null) {
  throw new CategoryDataset("" + result + "");
}

insert
if (var0 == null) {
      throw new Type1(str0 + var1 + str1);
    }
[Type0 var0 =
      var1.method0(var2.method1()).method2();, var0.method0(var1), var0 = var1.method0(var2.method1(), var3), Type0 var0 = var1.method0(var2);, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }]
[var0.method0() == null, var0.method0() != null, Type0 var0 = var1.method0();, var0.method0(str0 + var1
            + str1), var0.method0(str0 + var1 + str1), Type0 var0 =
      var1.method0(var2.method1()).method2();, for (Type0 var0 : var1.method0()) {
      try {
        if (var2.method1()) {
          var2.method2(str0 + var0);
        }
        var0.method3();
      } catch (Type1 var3) {
        var2.method4(str1
            + str2 + var3.method5());
      }
    }, Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
      try {
        var0.method1();
      } catch (Type1 var2) {
        var3.method2(str0 + var2.method3());
      }
    }, final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(var2.method1());]
===========

now:10
now:11
now:12
now:13
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
RectangleEdge barBase=RectangleEdge.LEFT;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadDirectory:9620
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
RectangleEdge barBase=RectangleEdge.LEFT;

insert
Type0 var0 = var1;
[Type0 var0 = var1.method0(var2);, byte[][] var0 = {{}};, var0 = var1.method0(var2), final Type0 var0 = var1.method0(var2);]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
CategoryDataset var0=var1;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadDirectory:9620
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
CategoryDataset var0=var1;

insert
Type0 var0 = var1;
[Type0 var0 = var1.method0(var2);, byte[][] var0 = {{}};, var0 = var1.method0(var2), final Type0 var0 = var1.method0(var2);]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=var1;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadDirectory:9620
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
LegendItemCollection var0=var1;

insert
Type0 var0 = var1;
[Type0 var0 = var1.method0(var2);, byte[][] var0 = {{}};, var0 = var1.method0(var2), final Type0 var0 = var1.method0(var2);]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
LegendItemCollection var0=var1;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSImageFormat.java:loadDirectory:9620
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
LegendItemCollection var0=var1;

insert
Type0 var0 = var1;
[Type0 var0 = var1.method0(var2);, byte[][] var0 = {{}};, var0 = var1.method0(var2), final Type0 var0 = var1.method0(var2);]
[int var0 = var1.method0();, final int var0 = var1.method0();]
===========

now:14
now:15
now:16
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x1=Math.round(x1);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x1=Math.round(x1);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x2=Math.round(x2);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x2=Math.round(x2);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
x0=Math.round(x0);

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0 = var1.method0(var0)
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/SimpleCopyListing.java:validatePaths:2549
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
x0=Math.round(x0);

insert
var0 = var1.method0(var0)
[boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0(method1());, Type0 var0 = var1.method0();]
[var0.method0(), var0.method0().method1() > 1, boolean var0 = var1.method0().method1() == 1
                                                && !var2.method2();, var0.method0().method1() == 1 && !var1, Type0 var0 = var1.method0(method1());, var0.method0(var1, var2, method1()), final Type0 var0 = var1.method0(method1());, var0.method0(method1(),
            var1.method2(var2),
            var1.method3(Type0.class),
            var1.method4(Type1.class),
            var1.method5(var3)), boolean var0 = var1.method0(var2);, !var0.method0(var1), var0.method0(var1) || !var2, Type0 var0 = var1.method0().method1(0);]
===========

now:17
now:18
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final LegendItemCollection var0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final LegendItemCollection var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
final LegendItemCollection var0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
final LegendItemCollection var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

now:19
now:20
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double x1;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double x1;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double x0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double x0;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double translatedBase;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double translatedBase;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double translatedValue;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double translatedValue;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
double yyOutlier;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0;
from
9467_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9467_0/after/FSDirectory.java:delete:32953
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
double yyOutlier;

insert
int var0;
[long var0 = method0();, final long var0 = method0();]
[]
===========

now:21
now:22
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
int visibleSeriesCount=0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
int visibleSeriesCount=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
short var0=0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
short var0=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
insert
short var0=0;

at Insert Before
IfStatement::null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:1797
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
short var0 = 0;
from
9242_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9242_0/after/FSDirectory.java:createFileStatus:69169
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
short var0=0;

insert
short var0 = 0;
[var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), long var0 = 0;]
[short var0 = 0;, long var0 = 0;, Type0 var0 = var1.method0(var2, false);, Type0 var0 =(Type0)var1[var2];, var0 = var1.method0(true), method0(var0, var1-1, 0,
          var2.method1()*var2.method2(), true), Type0 var0 =
        new Type0(
            var1,
            var2.method0(),
            var3,
            var4);, method0(var0, var1-1, 0,
        -var2.method1()*var2.method2(), true), var0 = var1.method0(), var0.method0() > 0, int var0 = var1.method0();, int var0 = var1.method0(null).method1();, var0.method0(var0.method1()-1), Type0 var0 = (Type0)var1;, var0.method0(var1.method1(var2, false), var2
          ).method2()]
===========

now:23
now:24
now:25
now:1
=========
Class:org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
update
dataset != null
to
dataset == null
at line 1797
Applied Change
update
var0 != null
to
==
from
10040_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10040_0/after/NamenodeJspHelper.java:
4
P:IfStatement{expression},L:,R:Block{thenStatement}
dataset == null
update
var0 != null
to
==
[]
[final Type0 var0;, final Type0 var0 = method0(var1);, var0 = var1.method0(), int var0;, Type0 var0 = var1.method0() + var2.method1() + str0
          + var2.method2()
          + str1 + var3 + str2
          + var4.method3(str3, str4)
          + var5.method4(var6, var7);]
===========

A Patch Found! - patches/11/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Candidate Number:438
Checked Lines:5
Checked Fix Locs:20
Checked Changes:280
Applied Changes:119
Loading Coverage Information....Done.
Random Seed:93
Loading Change Pool...Done.
Pool:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/pool/letspatch_pool
Preparing patch generation...
Done.
Loading Class - org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
now:1
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
entity.getToolTipText()
at Insert After
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
entity.getToolTipText()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
entity.getURLText()
at Insert After
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
entity.getURLText()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
input.length()
at Insert After
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
input.length()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
area.length()
at Insert After
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
area.length()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
htmlEscape.name()
at Insert After
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
1
P:InfixExpression{rightOperand},L:StringLiteral{leftOperand},R:SimpleName{rightOperand}
htmlEscape.name()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
" title=\""
at Insert After
SimpleName::toolTipText
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{extendedOperands},L:SimpleName{rightOperand},R:StringLiteral{extendedOperands}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
3
P:InfixExpression{extendedOperands},L:SimpleName{rightOperand},R:StringLiteral{extendedOperands}
" title=\""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
"\" alt=\"\""
at Insert After
SimpleName::toolTipText
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{extendedOperands},L:SimpleName{rightOperand},R:StringLiteral{extendedOperands}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
3
P:InfixExpression{extendedOperands},L:SimpleName{rightOperand},R:StringLiteral{extendedOperands}
"\" alt=\"\""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
"\" alt=\"\""
at Insert After
SimpleName::toolTipText
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{extendedOperands},L:SimpleName{rightOperand},R:StringLiteral{extendedOperands}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
3
P:InfixExpression{extendedOperands},L:SimpleName{rightOperand},R:StringLiteral{extendedOperands}
"\" alt=\"\""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
toolTipText
at Insert Before
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
toolTipText
insert
var0
[]
[]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
" title=\""
at Insert Before
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
1
P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
" title=\""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
" title=\""
at Insert Before
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
1
P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
" title=\""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

now:3
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
"" + "" + ""+ ""+ ""+ "\" alt=\"\""+ ""+ " title=\""
at Insert Before
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
Applied Change
insert
str0 +
      str1 +
      str2 +
      str3 +
      str4 +
      str5 +
      str6+
      str7
from
9768_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9768_0/after/FsShellPermissions.java:
1
P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
"" + "" + ""+ ""+ ""+ "\" alt=\"\""+ ""+ " title=\""
insert
str0 +
      str1 +
      str2 +
      str3 +
      str4 +
      str5 +
      str6+
      str7
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
"" + "" + ""+ ""+ ""+ " title=\""+ ""+ "\" alt=\"\""
at Insert Before
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
Applied Change
insert
str0 +
      str1 +
      str2 +
      str3 +
      str4 +
      str5 +
      str6+
      str7
from
9768_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9768_0/after/FsShellPermissions.java:
1
P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
"" + "" + ""+ ""+ ""+ " title=\""+ ""+ "\" alt=\"\""
insert
str0 +
      str1 +
      str2 +
      str3 +
      str4 +
      str5 +
      str6+
      str7
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
"" + "" + ""+ ""+ ""+ " title=\""+ ""+ "\" alt=\"\""
at Insert Before
StringLiteral::" title=\""
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
Applied Change
insert
str0 +
      str1 +
      str2 +
      str3 +
      str4 +
      str5 +
      str6+
      str7
from
9768_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9768_0/after/FsShellPermissions.java:
1
P:InfixExpression{leftOperand},L:,R:StringLiteral{leftOperand}
"" + "" + ""+ ""+ ""+ " title=\""+ ""+ "\" alt=\"\""
insert
str0 +
      str1 +
      str2 +
      str3 +
      str4 +
      str5 +
      str6+
      str7
[]
[]
===========

now:1
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
update
" title=\""
to
"\" alt=\"\""
at line 65
Applied Change
update
str0
to
str0
from
7045_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7045_0/after/Environment.java:
27
P:InfixExpression{leftOperand},L:,R:SimpleName{rightOperand}
"\" alt=\"\""
update
str0
to
str0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
update
" title=\""
to
""
at line 65
Applied Change
update
str0
to
str0
from
7045_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7045_0/after/Environment.java:
27
P:InfixExpression{leftOperand},L:,R:SimpleName{rightOperand}
""
update
str0
to
str0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
update
" title=\""
to
""
at line 65
Applied Change
update
str0
to
str0
from
7045_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7045_0/after/Environment.java:
27
P:InfixExpression{leftOperand},L:,R:SimpleName{rightOperand}
""
update
str0
to
str0
[]
[]
===========

now:1
now:2
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
if (toolTipText == null) return false;

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
if (var0 == null)
      return false;
from
7207_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7207_0/after/FileStatus.java:equals:2017
2
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
if (toolTipText == null) return false;

insert
if (var0 == null)
      return false;
[]
[]
===========

now:3
now:4
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
final ToolTipTagFragmentGenerator var0;

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
final ToolTipTagFragmentGenerator var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
final ToolTipTagFragmentGenerator var0;

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
final ToolTipTagFragmentGenerator var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

now:5
now:6
now:7
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
EntityCollection entities=info.getEntityCollection();

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
1
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
EntityCollection entities=info.getEntityCollection();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:8
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
int var0=0;

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
int var0 = 0;
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/BlockManager.java:reportDiff:69444
4
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
int var0=0;

insert
int var0 = 0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
int var0=0;

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
int var0 = 0;
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/BlockManager.java:reportDiff:69444
4
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
int var0=0;

insert
int var0 = 0;
[]
[]
===========

now:9
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
ImageMapUtilities(htmlEscape,toolTipText);

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
ImageMapUtilities(htmlEscape,toolTipText);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
sb(append,area);

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
sb(append,area);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
result(append,c);

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
result(append,c);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
entities(getEntity,i);

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
entities(getEntity,i);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
input(charAt,i);

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
input(charAt,i);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

now:10
now:11
now:12
now:13
now:14
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
if (toolTipText == null) {
  return null;
}

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
if (toolTipText == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

now:15
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator("\" alt=\"\"");

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(str0);
from
6293_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6293_0/after/BlockLocation.java:toString:6213
4
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator("\" alt=\"\"");

insert
Type0 var0 = new Type0(str0);
[]
[Type0 var0 = new Type0();, var0[var1] = var2.method0(), var0.method0()]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator(" title=\"");

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(str0);
from
6293_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6293_0/after/BlockLocation.java:toString:6213
4
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator(" title=\"");

insert
Type0 var0 = new Type0(str0);
[]
[Type0 var0 = new Type0();, var0[var1] = var2.method0(), var0.method0()]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator(" title=\"");

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(str0);
from
6293_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6293_0/after/BlockLocation.java:toString:6213
4
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator(" title=\"");

insert
Type0 var0 = new Type0(str0);
[]
[Type0 var0 = new Type0();, var0[var1] = var2.method0(), var0.method0()]
===========

now:16
now:17
now:18
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
StringBuffer sb=new StringBuffer();

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = new Type0();
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:toString:6178
47
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
StringBuffer sb=new StringBuffer();

insert
Type0 var0 = new Type0();
[]
[var0.method0(), Type0 var0 = new Type0(str0);]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
StringBuffer result=new StringBuffer();

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = new Type0();
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:toString:6178
47
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
StringBuffer result=new StringBuffer();

insert
Type0 var0 = new Type0();
[]
[var0.method0(), Type0 var0 = new Type0(str0);]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator();

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = new Type0();
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:toString:6178
47
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator();

insert
Type0 var0 = new Type0();
[]
[var0.method0(), Type0 var0 = new Type0(str0);]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator();

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
Type0 var0 = new Type0();
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:toString:6178
47
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
ToolTipTagFragmentGenerator var0=new ToolTipTagFragmentGenerator();

insert
Type0 var0 = new Type0();
[]
[var0.method0(), Type0 var0 = new Type0(str0);]
===========

now:19
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
long var0=0;

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
long var0 = 0;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/INodeFile.java:diskspaceConsumed:7336
5
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
long var0=0;

insert
long var0 = 0;
[]
[var0.method0(var1, method1()), method0(null), method0(true, false), method0(false, false), method0(true, true) * method1(), var0.method0(str0 + method1(var1)), this instanceof Type0?
        var0.method0((Type0)this)
        : method1(null), method0() * method1(), var0.method0(var1, var2 * method1())]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
long var0=0;

at Insert Before
ReturnStatement::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:65
Context:P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
Applied Change
insert
long var0 = 0;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/INodeFile.java:diskspaceConsumed:7336
5
P:MethodDeclaration{statements},L:,R:ReturnStatement{statements}
long var0=0;

insert
long var0 = 0;
[]
[var0.method0(var1, method1()), method0(null), method0(true, false), method0(false, false), method0(true, true) * method1(), var0.method0(str0 + method1(var1)), this instanceof Type0?
        var0.method0((Type0)this)
        : method1(null), method0() * method1(), var0.method0(var1, var2 * method1())]
===========

now:20
now:21
now:1
now:2
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
this.title=title;

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
this.var0 = var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/FileStatus.java:FileStatus:1837
4
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
this.title=title;

insert
this.var0 = var0
[this.var0 = var0, this.var0.var1 = true, this.var0 != var0, this.var0 = var1.method0(), var0.method0(this.var1)]
[this.var0 = var0, this.var0.var1 = true, this.var0 != null, var0 != null, this.var0, !this.var0.method0(var1), this.var0 = var1.method0(), var0.method0(this.var1)]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
this.style=style;

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
this.var0 = var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/FileStatus.java:FileStatus:1837
4
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
this.style=style;

insert
this.var0 = var0
[this.var0 = var0, this.var0.var1 = true, this.var0 != var0, this.var0 = var1.method0(), var0.method0(this.var1)]
[this.var0 = var0, this.var0.var1 = true, this.var0 != null, var0 != null, this.var0, !this.var0.method0(var1), this.var0 = var1.method0(), var0.method0(this.var1)]
===========

now:3
now:4
now:5
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
this.title=title;

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
this.var0 = var1
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:ContainersLogsBlock:3004
10
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
this.title=title;

insert
this.var0 = var1
[]
[]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
this.style=style;

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
this.var0 = var1
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:ContainersLogsBlock:3004
10
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
this.style=style;

insert
this.var0 = var1
[]
[]
===========

now:6
now:7
=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
sb(append,area);

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
sb(append,area);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
result(append,c);

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
result(append,c);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
entities(getEntity,i);

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
entities(getEntity,i);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
input(charAt,i);

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
input(charAt,i);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
insert
ImageMapUtilities(htmlEscape,toolTipText);

at Insert After
SuperConstructorInvocation::null
org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator:54
Context:P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
2
P:MethodDeclaration{statements},L:SuperConstructorInvocation{statements},R:
ImageMapUtilities(htmlEscape,toolTipText);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

Checked Lines:3
Checked Fix Locs:8
Checked Changes:35
Applied Changes:18
Loading Coverage Information....Done.
Random Seed:24
Loading Change Pool...Done.
Pool:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/pool/letspatch_pool
Preparing patch generation...
Done.
Loading Class - org.jfree.chart.util.ShapeUtilities
now:1
now:1
now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator1
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
iterator1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
p2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
p1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
anchorPoint
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
anchorPoint
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
base
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
base
insert
var0
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getMinuteSuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getMinuteSuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getDaySuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getDaySuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getHourSuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getHourSuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getSecondSuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getSecondSuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getMaximumWindowBounds();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getMaximumWindowBounds();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
this.dayFormatter.format(days);

at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
this.var0.method0(var1)
from
8341_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8341_0/after/HadoopArchives.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
this.dayFormatter.format(days);

insert
this.var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
this.secondFormatter.format(seconds);

at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
this.var0.method0(var1)
from
8341_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8341_0/after/HadoopArchives.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
this.secondFormatter.format(seconds);

insert
this.var0.method0(var1)
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
p2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
p1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
e1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
e1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
saved
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
saved
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
g2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
g2
insert
var0
[]
[]
===========

now:3
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
-1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
-1
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/FSNamesystem.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
-1
insert
-1
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
-1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
-1
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/FSNamesystem.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
-1
insert
-1
[]
[]
===========

now:4
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
""
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
""
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

now:1
now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final Object object=get.i();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final Object object=get.i();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final String baseName=c.getName();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final String baseName=c.getName();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final ClassLoader cl=getClassLoader.c();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final ClassLoader cl=getClassLoader.c();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final ClassLoader loader=getClassLoader.source();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final ClassLoader loader=getClassLoader.source();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final Iterator iterator=collection.iterator();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final Iterator iterator=collection.iterator();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

now:3
now:4
now:5
now:6
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (base == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (base == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p1 == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (p1 == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (iterator1 == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (iterator1 == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p2 == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (p2 == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (cnse == null) {
  return null;
}

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == null) {
        return null;
      }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/DFSUtil.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
if (cnse == null) {
  return null;
}

insert
if (var0 == null) {
        return null;
      }
[Type0 var0 = method0(var1, var2, var3, var4);, Type0 var0;]
[]
===========

now:7
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
w=frame.getWidth();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
w=frame.getWidth();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
h=frame.getHeight();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
h=frame.getHeight();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
x=frame.getX();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
x=frame.getX();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=rectangle.getMinY();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=rectangle.getMinY();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=rectangle.getMinX();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
result=rectangle.getMinX();

insert
var0 = var1.method0()
[]
[]
===========

now:8
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0=new GeneralPath(iterator1,true);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0=new GeneralPath(iterator1,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0=new PathIterator(p1,true);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0=new PathIterator(p1,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0=new PathIterator(p1,true);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = new Type0(var1, true);
from
7920_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7920_0/after/AppsBlock.java:
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0=new PathIterator(p1,true);

insert
Type0 var0 = new Type0(var1, true);
[]
[for (Type0 var0 : var1.method0()) {
      Type1 var2 = var0.method1().method2();
      Type1 var3 = var0.method3();
      boolean var4 = var3 == null || var3.method4() || str0.method5(var3);
	  Type1 var5 = var4 ? str1 :
          (var0.method6() == 0 ? 
              str2 : str3);
      Type1 var6 = var7.method7(str4, var0.method8() * 100);
      var8.
        method9().
          method10().
            method11().method12(var7.method13(var0.method1().method14())).method15(). // for sorting
            method16(method17(str5, var2), var2).method15().
          method10(var0.method18().method2()).
          method10(var0.method19().method2()).
          method10(var0.method20().method2()).
          method10(var0.method21().method2()).
          method10(var0.method22().method2()).
          method10().
            method11().method12(var6).method15(). // for sorting
            method23(var9).
              method12(method24(var6, '%')). // tooltip
              method23(var10).
                method25(method24(str6, var6, '%')).method15().method15().method15().
          method10().
            method16(var4 ?
              str7 : method24(str8, var3), var5).method15().
          method10(var0.method26().method2()).method15();
      if (var11 != var12 && ++var13 >= 20) break;
    }, Type0 var0 = var1.method0(str0, var2.method1() * 100);, Type0 var0 = var1.method0().method1();, Type0 var0 = var1.method0();, Type0 var0 = var1 ? str0 :
          (var2.method0() == 0 ? 
              str1 : str2);]
===========

now:9
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeInt(pi.getWindingRule());

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeInt(pi.getWindingRule());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
gp.setWindingRule(stream.readInt());

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
gp.setWindingRule(stream.readInt());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.format(c1.getTime());

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
rdf.format(c1.getTime());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeObject(gp.getColor1());

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeObject(gp.getColor1());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeDouble(rectangle.getWidth());

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
9
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeDouble(rectangle.getWidth());

insert
var0.method0(var1.method1())
[]
[]
===========

now:10
now:11
now:12
now:13
now:14
now:15
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final String pkgName=baseName.substring(0,index);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0 = var1.method0(0, var2);
from
6560_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6560_0/after/HarFileSystem.java:decodeHarURI:5602
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final String pkgName=baseName.substring(0,index);

insert
final Type0 var0 = var1.method0(0, var2);
[]
[Type0[] var0 = var1.method0(str0, 2);, Type0 var0 = (var1 > 1)? var2[1]:null;]
===========

now:16
now:17
now:18
now:19
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform.getRotateInstance(angle,x,y);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
7
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform.getRotateInstance(angle,x,y);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:20
now:21
now:22
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
String signPrefix;

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
String signPrefix;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0;

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0;

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0;

insert
Type0 var0;
[]
[]
===========

now:23
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator1(currentSegment,d1);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
iterator1(currentSegment,d1);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Math(sin,theta);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Math(sin,theta);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
g2(draw,shape);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2(draw,shape);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Math(cos,theta);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Math(cos,theta);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
g2(transform,rotate);

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0, var1)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:doAs:37945
22
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
g2(transform,rotate);

insert
method0(var0, var1)
[]
[var0.method0(var1, var2), this.var0 = var0, Type0 var0 = var1.method0(var2);, Type0 var0 = new Type0();, var0 == ((Type0) var1).var0]
===========

now:24
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean result=false;

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean result=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:25
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final double h=dimensions.getHeight();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final int var0 = var1.method0();
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/PBHelper.java:convert:27782
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final double h=dimensions.getHeight();

insert
final int var0 = var1.method0();
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, var0[var1] = method0(var2.method1(var1)), var0[var1] = Type0.method0(var2.method1(var1)), var0.method0(var1), var0.method0(Type0.method1(var1.method2(var2))), for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = method0(var3[var0]);
    }, int var0 = 0;, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3[var0]);
    }, for (int var0 = var1; var0 < var2; var0++) {
      var3.method0(method1(var4[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; var0++) {
      Type0 var2 = var3[var0];
      var4.method0(var0, Type1.method1(var2));
      boolean var5 = var6.method2(var2);
      var4.method3(var5);
      if (var5) {
        var6.method4(var2);
      }
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
      var2[var0] = Type0.method1(var1.method2(var0));
    }, for (int var0=0; var0<var1.method0(); var0++) {
      if (var1.method1(var0)) {
        var2.method2(var3[var0]);
      }
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(Type0.method1(var3[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0()
          .method1(Type0.method2(var4[var0])).method3();
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0(var0);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2.method0(Type0.method1(var3.method2(var0)));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = Type0.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
        var2[var0] = Type0.method1(var1.method2(var0));
      }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3[var0]);
    }, var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5())), var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5()))
        .method6(var1.method7())
        .method8(method4((Type0) var1)), new Type0(var0.method0(), var0.method1(),
        method2(var0.method3()), method2(var0.method4())), var0[var1] = method0(var2[var1]), var0.method0()
        .method1(method2(var1.method3())), new Type0(method0(var0.method1()), var0.method2()
        .method3(new Type1[0])), var0.method0(method1(var1)), var0[var1++] = method0(var2), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(var1.method5())
        .method6(method7(var1.method8())), new Type0(var0.method0(),
        var0.method1(), var0.method2(),
        method3(var0.method4()), method5(var0.method6())), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(var1.method6())
        .method7(Type0.method8((Type1) var1)), new Type0(Type1.method0(var0.method1()),
        var0.method2(), var0.method3(),
        var0.method4()), var0.method0().method1(var1.method2())
          .method3(var2)
          .method4(method5((Type0) var1)), new Type0(Type1.method0(var0.method1()),
          var0.method2()), Type0 var0 = Type1.method0((Type2)var1);, Type0 var0 = method0(var1.method1().method2());, new Type0(
        Type1.method0(var0.method1()),
        var0.method2() ? var0.method3() : null , 
        var0.method4(),  var0.method5(),  var0.method6(),
        var0.method7(), var0.method8(), var0.method9(),
        var0.method10(), var0.method11(),
        Type1.method0(var0.method12())), var0.
     method0(Type0.method1((Type1) var1)), var0.
     method0(Type0.method1((Type1) var1)).
     method2(var1.method3()).
     method4(var1.method5()).
     method6(var1.method7()).
     method8(var1.method9()).
     method10(var1.method11()).
     method12(var1.method13()).
     method14(Type0.method1(var1.method15())), method0(var0, 0), var0.method0(method1(var1[var2])), var0.method0(Type0.method1(var1.method2())), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(Type0.method5((Type1)var1)), var0.method0(var1, Type0.method1(var2)), var0.method0(Type0.method1(var1.method2()))
        .method3(Type0.method1(var1.method4())), Type0 var0 = new Type0(Type1.method0(var1.method1()), var2,
        var1.method2(), var1.method3(),
        var3.method4(new Type2[0]));, var0.method0(Type0.method1((Type1) var1)), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3())), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3()))
        .method4(Type0.method1(var1.method5())), new Type0(Type1.method0(var0.method1()),
        Type1.method0(var0.method2()), Type1.method0(var0
            .method3()), var0.method4()), Type0.method0(var0.method1()), var0.method0()
        .method1(Type0.method2(var1.method3())), var0.method0(Type0.method1(var1)), var0.method0(Type0.method1(var1[var2])), var0.method0()
          .method1(Type0.method2(var1[var2])), var0.method0(var1)
          .method1(
              Type0.method2((Type1) var2)), var0
          .method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1).
        method1(Type0.method2((Type1) var2)), new Type0(Type1.method0(var0.method1())), new Type0(
        Type1.method0(var0.method1()),
        var1,
        var0.method2() ? var0.method3() : null), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(0)
        .method6(Type0.method7((Type1)var1)), new Type0(
        var0.method0(), var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4() ? Type1.method5(var0.method6()) : null,
        var0.method7()), new Type0(
        var0.method0(), var0.method1(), 
        var0.method2(), (short) var0.method3(),
        var0.method4(),
        var0.method5(),
        var0.method6(),
        Type1.method7(var0.method8())), var0.method0().
      method1(var1.method2()).
      method3(var1.method4()).
      method5(var1.method6())
      .method7(var1.method8())
      .method9(var1.method10())
      .method11(var1.method12())
      .method13(var1.method14())
      .method15(Type0.method16(var1.method17())), new Type0(
        var0.method0(), var0.method1().method2(var1), 
        var0.method3(), var0.method4(),
        var0.method5(), var0.method6(),
        Type1.method7(var0.method8()), var0.method9(), var0.method10(), 
        var0.method1().method2(var2) ? 
            var0.method11().method12() : null,
        var0.method13().method12(),
        var0.method14()? var0.method15(): var3,
        var0.method16() ? Type1.method7(var0.method17()) : null,
        var0.method18() ? var0.method19() : -1), new Type0(
        var0.method0(),
        var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4(),
        var0.method5(),
        var0.method6().method7(),
        var0.method8(),
        var0.method9(),
        var1.method10(),
        var1.method11(),
        var1.method12().method7()), var0.method0().
      method1(var1.method2()).
      method3(var2).
      method4(var1.method5()).
      method6(var1.method7()).
      method8(var1.method9()).
      method10(var1.method11()).
      method12(Type0.method13(var1.method14())), Type0 var0 = method0(var1.method1());, var0[var1] = Type0.method0(var2[var1]), var0.method0().
        method1(var1.method2(
            Type0.method3(var2.method4()))), new Type0(var0.method0(), Type1.method1(var0.method2())), Type0 var0 = method0(var1);, var0.method0(method1(var1.method2())), Type0 var0 = Type1.method0(var1.method1());, var0.method0().method1(method2(var1.method3())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7()))
          .method8(method2(var1.method9())), new Type0().method0(method1(var0.method2())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6()))
          .method7(method1(var0.method8()))]
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, Type0<Type1> var0 =
        var1.method0(var2.method1(var3.method2()));]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final double w=dimensions.getWidth();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final int var0 = var1.method0();
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/PBHelper.java:convert:27782
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final double w=dimensions.getWidth();

insert
final int var0 = var1.method0();
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, var0[var1] = method0(var2.method1(var1)), var0[var1] = Type0.method0(var2.method1(var1)), var0.method0(var1), var0.method0(Type0.method1(var1.method2(var2))), for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = method0(var3[var0]);
    }, int var0 = 0;, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3[var0]);
    }, for (int var0 = var1; var0 < var2; var0++) {
      var3.method0(method1(var4[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; var0++) {
      Type0 var2 = var3[var0];
      var4.method0(var0, Type1.method1(var2));
      boolean var5 = var6.method2(var2);
      var4.method3(var5);
      if (var5) {
        var6.method4(var2);
      }
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
      var2[var0] = Type0.method1(var1.method2(var0));
    }, for (int var0=0; var0<var1.method0(); var0++) {
      if (var1.method1(var0)) {
        var2.method2(var3[var0]);
      }
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(Type0.method1(var3[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0()
          .method1(Type0.method2(var4[var0])).method3();
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0(var0);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2.method0(Type0.method1(var3.method2(var0)));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = Type0.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
        var2[var0] = Type0.method1(var1.method2(var0));
      }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3[var0]);
    }, var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5())), var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5()))
        .method6(var1.method7())
        .method8(method4((Type0) var1)), new Type0(var0.method0(), var0.method1(),
        method2(var0.method3()), method2(var0.method4())), var0[var1] = method0(var2[var1]), var0.method0()
        .method1(method2(var1.method3())), new Type0(method0(var0.method1()), var0.method2()
        .method3(new Type1[0])), var0.method0(method1(var1)), var0[var1++] = method0(var2), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(var1.method5())
        .method6(method7(var1.method8())), new Type0(var0.method0(),
        var0.method1(), var0.method2(),
        method3(var0.method4()), method5(var0.method6())), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(var1.method6())
        .method7(Type0.method8((Type1) var1)), new Type0(Type1.method0(var0.method1()),
        var0.method2(), var0.method3(),
        var0.method4()), var0.method0().method1(var1.method2())
          .method3(var2)
          .method4(method5((Type0) var1)), new Type0(Type1.method0(var0.method1()),
          var0.method2()), Type0 var0 = Type1.method0((Type2)var1);, Type0 var0 = method0(var1.method1().method2());, new Type0(
        Type1.method0(var0.method1()),
        var0.method2() ? var0.method3() : null , 
        var0.method4(),  var0.method5(),  var0.method6(),
        var0.method7(), var0.method8(), var0.method9(),
        var0.method10(), var0.method11(),
        Type1.method0(var0.method12())), var0.
     method0(Type0.method1((Type1) var1)), var0.
     method0(Type0.method1((Type1) var1)).
     method2(var1.method3()).
     method4(var1.method5()).
     method6(var1.method7()).
     method8(var1.method9()).
     method10(var1.method11()).
     method12(var1.method13()).
     method14(Type0.method1(var1.method15())), method0(var0, 0), var0.method0(method1(var1[var2])), var0.method0(Type0.method1(var1.method2())), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(Type0.method5((Type1)var1)), var0.method0(var1, Type0.method1(var2)), var0.method0(Type0.method1(var1.method2()))
        .method3(Type0.method1(var1.method4())), Type0 var0 = new Type0(Type1.method0(var1.method1()), var2,
        var1.method2(), var1.method3(),
        var3.method4(new Type2[0]));, var0.method0(Type0.method1((Type1) var1)), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3())), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3()))
        .method4(Type0.method1(var1.method5())), new Type0(Type1.method0(var0.method1()),
        Type1.method0(var0.method2()), Type1.method0(var0
            .method3()), var0.method4()), Type0.method0(var0.method1()), var0.method0()
        .method1(Type0.method2(var1.method3())), var0.method0(Type0.method1(var1)), var0.method0(Type0.method1(var1[var2])), var0.method0()
          .method1(Type0.method2(var1[var2])), var0.method0(var1)
          .method1(
              Type0.method2((Type1) var2)), var0
          .method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1).
        method1(Type0.method2((Type1) var2)), new Type0(Type1.method0(var0.method1())), new Type0(
        Type1.method0(var0.method1()),
        var1,
        var0.method2() ? var0.method3() : null), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(0)
        .method6(Type0.method7((Type1)var1)), new Type0(
        var0.method0(), var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4() ? Type1.method5(var0.method6()) : null,
        var0.method7()), new Type0(
        var0.method0(), var0.method1(), 
        var0.method2(), (short) var0.method3(),
        var0.method4(),
        var0.method5(),
        var0.method6(),
        Type1.method7(var0.method8())), var0.method0().
      method1(var1.method2()).
      method3(var1.method4()).
      method5(var1.method6())
      .method7(var1.method8())
      .method9(var1.method10())
      .method11(var1.method12())
      .method13(var1.method14())
      .method15(Type0.method16(var1.method17())), new Type0(
        var0.method0(), var0.method1().method2(var1), 
        var0.method3(), var0.method4(),
        var0.method5(), var0.method6(),
        Type1.method7(var0.method8()), var0.method9(), var0.method10(), 
        var0.method1().method2(var2) ? 
            var0.method11().method12() : null,
        var0.method13().method12(),
        var0.method14()? var0.method15(): var3,
        var0.method16() ? Type1.method7(var0.method17()) : null,
        var0.method18() ? var0.method19() : -1), new Type0(
        var0.method0(),
        var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4(),
        var0.method5(),
        var0.method6().method7(),
        var0.method8(),
        var0.method9(),
        var1.method10(),
        var1.method11(),
        var1.method12().method7()), var0.method0().
      method1(var1.method2()).
      method3(var2).
      method4(var1.method5()).
      method6(var1.method7()).
      method8(var1.method9()).
      method10(var1.method11()).
      method12(Type0.method13(var1.method14())), Type0 var0 = method0(var1.method1());, var0[var1] = Type0.method0(var2[var1]), var0.method0().
        method1(var1.method2(
            Type0.method3(var2.method4()))), new Type0(var0.method0(), Type1.method1(var0.method2())), Type0 var0 = method0(var1);, var0.method0(method1(var1.method2())), Type0 var0 = Type1.method0(var1.method1());, var0.method0().method1(method2(var1.method3())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7()))
          .method8(method2(var1.method9())), new Type0().method0(method1(var0.method2())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6()))
          .method7(method1(var0.method8()))]
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, Type0<Type1> var0 =
        var1.method0(var2.method1(var3.method2()));]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final int index=stream.readInt();

at Insert After
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final int var0 = var1.method0();
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/PBHelper.java:convert:27782
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:VariableDeclarationStatement{statements}
final int index=stream.readInt();

insert
final int var0 = var1.method0();
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, var0[var1] = method0(var2.method1(var1)), var0[var1] = Type0.method0(var2.method1(var1)), var0.method0(var1), var0.method0(Type0.method1(var1.method2(var2))), for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = method0(var3[var0]);
    }, int var0 = 0;, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3[var0]);
    }, for (int var0 = var1; var0 < var2; var0++) {
      var3.method0(method1(var4[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; var0++) {
      Type0 var2 = var3[var0];
      var4.method0(var0, Type1.method1(var2));
      boolean var5 = var6.method2(var2);
      var4.method3(var5);
      if (var5) {
        var6.method4(var2);
      }
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
      var2[var0] = Type0.method1(var1.method2(var0));
    }, for (int var0=0; var0<var1.method0(); var0++) {
      if (var1.method1(var0)) {
        var2.method2(var3[var0]);
      }
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(Type0.method1(var3[var0]));
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0()
          .method1(Type0.method2(var4[var0])).method3();
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = var3.method0(var0);
    }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3.method1(var0));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2.method0(Type0.method1(var3.method2(var0)));
    }, for (int var0 = 0; var0 < var1; ++var0) {
      var2[var0] = Type0.method0(var3[var0]);
    }, for (int var0 = 0; var0 < var1.method0(); var0++) {
        var2[var0] = Type0.method1(var1.method2(var0));
      }, for (int var0 = 0; var0 < var1; var0++) {
      var2[var0] = Type0.method0(var3[var0]);
    }, var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5())), var0.method0()
        .method1(var1.method2()).method3(method4(var1.method5()))
        .method6(var1.method7())
        .method8(method4((Type0) var1)), new Type0(var0.method0(), var0.method1(),
        method2(var0.method3()), method2(var0.method4())), var0[var1] = method0(var2[var1]), var0.method0()
        .method1(method2(var1.method3())), new Type0(method0(var0.method1()), var0.method2()
        .method3(new Type1[0])), var0.method0(method1(var1)), var0[var1++] = method0(var2), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(var1.method5())
        .method6(method7(var1.method8())), new Type0(var0.method0(),
        var0.method1(), var0.method2(),
        method3(var0.method4()), method5(var0.method6())), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(var1.method6())
        .method7(Type0.method8((Type1) var1)), new Type0(Type1.method0(var0.method1()),
        var0.method2(), var0.method3(),
        var0.method4()), var0.method0().method1(var1.method2())
          .method3(var2)
          .method4(method5((Type0) var1)), new Type0(Type1.method0(var0.method1()),
          var0.method2()), Type0 var0 = Type1.method0((Type2)var1);, Type0 var0 = method0(var1.method1().method2());, new Type0(
        Type1.method0(var0.method1()),
        var0.method2() ? var0.method3() : null , 
        var0.method4(),  var0.method5(),  var0.method6(),
        var0.method7(), var0.method8(), var0.method9(),
        var0.method10(), var0.method11(),
        Type1.method0(var0.method12())), var0.
     method0(Type0.method1((Type1) var1)), var0.
     method0(Type0.method1((Type1) var1)).
     method2(var1.method3()).
     method4(var1.method5()).
     method6(var1.method7()).
     method8(var1.method9()).
     method10(var1.method11()).
     method12(var1.method13()).
     method14(Type0.method1(var1.method15())), method0(var0, 0), var0.method0(method1(var1[var2])), var0.method0(Type0.method1(var1.method2())), var0.method0(var1.method1())
        .method2(var1.method3())
        .method4(Type0.method5((Type1)var1)), var0.method0(var1, Type0.method1(var2)), var0.method0(Type0.method1(var1.method2()))
        .method3(Type0.method1(var1.method4())), Type0 var0 = new Type0(Type1.method0(var1.method1()), var2,
        var1.method2(), var1.method3(),
        var3.method4(new Type2[0]));, var0.method0(Type0.method1((Type1) var1)), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3())), var0.method0(Type0.method1((Type1) var1))
        .method2(Type0.method1(var1.method3()))
        .method4(Type0.method1(var1.method5())), new Type0(Type1.method0(var0.method1()),
        Type1.method0(var0.method2()), Type1.method0(var0
            .method3()), var0.method4()), Type0.method0(var0.method1()), var0.method0()
        .method1(Type0.method2(var1.method3())), var0.method0(Type0.method1(var1)), var0.method0(Type0.method1(var1[var2])), var0.method0()
          .method1(Type0.method2(var1[var2])), var0.method0(var1)
          .method1(
              Type0.method2((Type1) var2)), var0
          .method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1)
          .method1(Type0.method2((Type1) var2)), var0.method0(var1).
        method1(Type0.method2((Type1) var2)), new Type0(Type1.method0(var0.method1())), new Type0(
        Type1.method0(var0.method1()),
        var1,
        var0.method2() ? var0.method3() : null), var0.method0()
        .method1(var1.method2())
        .method3(var1.method4())
        .method5(0)
        .method6(Type0.method7((Type1)var1)), new Type0(
        var0.method0(), var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4() ? Type1.method5(var0.method6()) : null,
        var0.method7()), new Type0(
        var0.method0(), var0.method1(), 
        var0.method2(), (short) var0.method3(),
        var0.method4(),
        var0.method5(),
        var0.method6(),
        Type1.method7(var0.method8())), var0.method0().
      method1(var1.method2()).
      method3(var1.method4()).
      method5(var1.method6())
      .method7(var1.method8())
      .method9(var1.method10())
      .method11(var1.method12())
      .method13(var1.method14())
      .method15(Type0.method16(var1.method17())), new Type0(
        var0.method0(), var0.method1().method2(var1), 
        var0.method3(), var0.method4(),
        var0.method5(), var0.method6(),
        Type1.method7(var0.method8()), var0.method9(), var0.method10(), 
        var0.method1().method2(var2) ? 
            var0.method11().method12() : null,
        var0.method13().method12(),
        var0.method14()? var0.method15(): var3,
        var0.method16() ? Type1.method7(var0.method17()) : null,
        var0.method18() ? var0.method19() : -1), new Type0(
        var0.method0(),
        var0.method1(),
        Type1.method2(var0.method3()),
        var0.method4(),
        var0.method5(),
        var0.method6().method7(),
        var0.method8(),
        var0.method9(),
        var1.method10(),
        var1.method11(),
        var1.method12().method7()), var0.method0().
      method1(var1.method2()).
      method3(var2).
      method4(var1.method5()).
      method6(var1.method7()).
      method8(var1.method9()).
      method10(var1.method11()).
      method12(Type0.method13(var1.method14())), Type0 var0 = method0(var1.method1());, var0[var1] = Type0.method0(var2[var1]), var0.method0().
        method1(var1.method2(
            Type0.method3(var2.method4()))), new Type0(var0.method0(), Type1.method1(var0.method2())), Type0 var0 = method0(var1);, var0.method0(method1(var1.method2())), Type0 var0 = Type1.method0(var1.method1());, var0.method0().method1(method2(var1.method3())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7())), var0.method0().method1(method2(var1.method3()))
          .method4(var1.method5()).method6(method2(var1.method7()))
          .method8(method2(var1.method9())), new Type0().method0(method1(var0.method2())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6())), new Type0().method0(method1(var0.method2()))
          .method3(var0.method4()).method5(method1(var0.method6()))
          .method7(method1(var0.method8()))]
[Type0[] var0 = method0(var1.method1().method2());, Type0[] var0 = var1.method0();, Type0<Type1> var0 = var1.method0();, Type0[] var0 = new Type0[var1.method0()];, Type0<Type1> var0 = new Type2<Type1>(var1
        .method0().method1());, var0.method0(var1.method1() == 0,
        str0
        + str1), var0 < var1.method0(), Type0<Type1> var0 = new Type2<Type1>(var1.method0());, var0<var1.method0(), Type0<Type1> var0 = new Type2<Type1>(
        var1.method0());, Type0[][] var0 = new Type0[var1.method0()][];, final int var0 = var1.method0();, new Type0( 
        var0.method0() ? new Type1[0] 
          : Type2.method1(
              var0.method2(new Type3[var0.method3()])),
        var1.method4()), new Type0(var0.method0(new Type1[var0.method1()]),
        var1.method2()), Type0[] var0 = 
          new Type0[var1.method0()];, Type0<Type1> var0 = var1.method0(var2.method1());, Type0<Type1> var0 =
        var1.method0(var2.method1(var3.method2()));]
===========

now:1
now:2
now:3
now:4
now:5
now:6
now:7
now:8
now:9
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final Object object=get.i();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
final Object object=get.i();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final String baseName=c.getName();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
final String baseName=c.getName();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final ClassLoader cl=getClassLoader.c();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
final ClassLoader cl=getClassLoader.c();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final ClassLoader loader=getClassLoader.source();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
final ClassLoader loader=getClassLoader.source();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final Object item=iterator.next();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0 =
          var1.method0();
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:decryptEncryptedKey:8753
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
final Object item=iterator.next();

insert
final Type0 var0 =
          var1.method0();
[]
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
===========

now:10
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final Polygon var0;

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
final Polygon var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final Polygon var0;

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
final Polygon var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

now:11
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Shape result=rotate.createTransformedShape(base);

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0(var2);
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:expandDirs:13750
4
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Shape result=rotate.createTransformedShape(base);

insert
Type0 var0 = var1.method0(var2);
[]
[]
===========

now:12
now:13
now:14
now:15
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Rectangle s=getMaximumWindowBounds();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = method0();
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/NameNodeRpcServer.java:create:14472
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Rectangle s=getMaximumWindowBounds();

insert
Type0 var0 = method0();
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3), var0.method0()]
===========

now:16
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2(getWindingRule);

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
p2(getWindingRule);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1(getWindingRule);

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
p1(getWindingRule);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rect2(getWidth);

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
rect2(getWidth);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rect1(getX);

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
rect1(getX);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rect1(getY);

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
rect1(getY);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:17
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y0=rect1.getY();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
double y0=rect1.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y=rect2.getY();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
double y=rect2.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x0=rect1.getX();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
double x0=rect1.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x=rect2.getX();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
double x=rect2.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double height=rect2.getHeight();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
double height=rect2.getHeight();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:18
now:19
now:20
now:21
now:22
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GradientPaint result=paint;

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/DatanodeDescriptor.java:next:13888
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
GradientPaint result=paint;

insert
Type0 var0 = var1;
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Polygon var0=var1;

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/DatanodeDescriptor.java:next:13888
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Polygon var0=var1;

insert
Type0 var0 = var1;
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Polygon var0=var1;

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/DatanodeDescriptor.java:next:13888
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Polygon var0=var1;

insert
Type0 var0 = var1;
[]
[]
===========

now:23
now:24
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
super.set(index,object);

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
super.var0(var1, var2)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/INodeDirectory.java:dumpTreeRecursively:14825
1
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
super.set(index,object);

insert
super.var0(var1, var2)
[]
[]
===========

now:25
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform saved=g2.getTransform();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
5
P:MethodDeclaration{statements},L:IfStatement{statements},R:IfStatement{statements}
AffineTransform saved=g2.getTransform();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new IllegalArgumentException("Null 'shape' argument.");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'shape' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new IllegalArgumentException("Null 'anchor' argument.");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'anchor' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new GeneralPath("");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new GeneralPath("");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new GeneralPath("");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new GeneralPath("");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return name;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return name;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return retval;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return retval;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return classLoader;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return classLoader;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return applicationCL;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return applicationCL;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return threadLoader;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return threadLoader;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

now:3
now:4
now:5
now:6
now:7
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  done=true;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  done=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

now:8
now:9
now:10
now:11
now:12
now:13
now:14
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=Layer.FOREGROUND;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=Layer.FOREGROUND;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=Layer.BACKGROUND;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=Layer.BACKGROUND;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.TOP;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.TOP;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.LEFT;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.LEFT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.RIGHT;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.RIGHT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.m_numDigits=digits;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.m_numDigits=digits;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.name=name;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.name=name;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.width=width;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.width=width;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.height=height;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.height=height;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.showZeroDays=show;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.showZeroDays=show;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

now:17
now:18
now:19
now:20
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:271
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

now:21
now:22
now:23
now:24
now:25
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
p1
to
p2
at line 271
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
p2
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
update
p1
to
p0
at line 271
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
p0
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
update
p1
to
result
at line 271
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
result
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
p1
to
p2
at line 271
Applied Change
update
var0
to
method0
from
9150_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9150_0/after/FileSystem.java:
15
P:MethodInvocation{expression},L:,R:SimpleName{name}
p2
update
var0
to
method0
[]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
p2
to
p1
at line 271
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
p1
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
update
p2
to
p0
at line 271
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
p0
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
update
p2
to
result
at line 271
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
result
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
p2
to
p1
at line 271
Applied Change
update
var0
to
method0
from
9150_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9150_0/after/FileSystem.java:
15
P:MethodInvocation{expression},L:,R:SimpleName{name}
p1
update
var0
to
method0
[]
[]
===========

now:1
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
d1
to
d2
at line 288
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
104
P:MethodInvocation{arguments},L:SimpleName{name},R:SimpleName{arguments}
d2
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
d2
to
d1
at line 288
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
17
P:MethodInvocation{arguments},L:SimpleName{arguments},R:
d1
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new IllegalArgumentException("Null 'shape' argument.");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'shape' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new IllegalArgumentException("Null 'anchor' argument.");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'anchor' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new GeneralPath("");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new GeneralPath("");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new GeneralPath("");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new GeneralPath("");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return name;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return name;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return retval;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return retval;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return classLoader;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return classLoader;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return applicationCL;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return applicationCL;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return threadLoader;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return threadLoader;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

now:3
now:4
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (seg2 != 0) {
  seg1--;
  seg2=0;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (seg2 != 0) {
  seg1--;
  seg2=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (seg1 != 0) {
  seg2--;
  seg1=0;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (seg1 != 0) {
  seg2--;
  seg1=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (seg1 != 0) {
  seg2--;
  seg1=0;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
from
8654_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8654_0/after/LineReader.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
if (seg1 != 0) {
  seg2--;
  seg1=0;
}

insert
if (var0 != 0) {
          var1--; // recheck if bufferPosn matches start of delimiter
          var0 = 0;
        }
[]
[]
===========

now:5
now:6
now:7
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  done=true;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  done=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

now:8
now:9
now:10
now:11
now:12
now:13
now:14
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=Layer.FOREGROUND;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=Layer.FOREGROUND;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=Layer.BACKGROUND;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=Layer.BACKGROUND;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.TOP;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.TOP;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.LEFT;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.LEFT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.RIGHT;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.RIGHT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.m_numDigits=digits;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.m_numDigits=digits;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.name=name;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.name=name;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.width=width;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.width=width;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.height=height;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.height=height;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.showZeroDays=show;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.showZeroDays=show;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

now:17
now:18
now:19
now:20
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:288
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

now:21
now:22
now:23
now:24
now:25
now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform saved=g2.getTransform();

at Insert Before
IfStatement::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:WhileStatement{statements},L:,R:IfStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
2
P:WhileStatement{statements},L:,R:IfStatement{statements}
AffineTransform saved=g2.getTransform();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
update
isDone
to
next
at line 280
Applied Change
update
method0
to
method0
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
497
P:MethodInvocation{name},L:SimpleName{expression},R:
next
update
method0
to
method0
[]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
update
isDone
to
next
at line 280
Applied Change
update
method0
to
method0
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
497
P:MethodInvocation{name},L:SimpleName{expression},R:
next
update
method0
to
method0
[]
[]
===========

now:1
now:2
now:3
now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
p2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
iterator2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
p1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
saved
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
saved
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
s2
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
s2
insert
var0
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
size();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
size();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
dispose();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
dispose();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getMinuteSuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getMinuteSuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getDaySuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getDaySuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getHourSuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getHourSuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
this.dayFormatter.format(days);

at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
this.var0.method0(var1)
from
8341_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8341_0/after/HadoopArchives.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
this.dayFormatter.format(days);

insert
this.var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
this.secondFormatter.format(seconds);

at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
this.var0.method0(var1)
from
8341_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8341_0/after/HadoopArchives.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
this.secondFormatter.format(seconds);

insert
this.var0.method0(var1)
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
p1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
iterator2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
p2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
anchor
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
anchor
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
g2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
g2
insert
var0
[]
[]
===========

now:3
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
-1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
-1
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/FSNamesystem.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
-1
insert
-1
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
-1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
-1
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/FSNamesystem.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
-1
insert
-1
[]
[]
===========

now:4
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
""
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
""
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new IllegalArgumentException("Null 'shape' argument.");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'shape' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new IllegalArgumentException("Null 'anchor' argument.");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new IllegalArgumentException("Null 'anchor' argument.");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new GeneralPath("");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new GeneralPath("");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  throw new GeneralPath("");
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
        throw new Type0(str0);
      }
from
8249_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8249_0/after/AuthenticationFilter.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  throw new GeneralPath("");
}

insert
{
        throw new Type0(str0);
      }
[Type0 var0 = var1.method0();, var0.method0(str0, method1(var1)), var0.method0(str0, method1(var1), var2.method2()), var0 = new Type0(var0) {

          @Override
          public Type1 method0() {
            return var1.method1();
          }

          @Override
          public Type1 method2() {
            return var1.method3();
          }

          @Override
          public Type2 method4() {
            return (var1 != var2) ? var1 : null;
          }
        }, for (Type0 var0 : var1) {
        if (var0.method0().method1(var2)) {
          var3 = var0.method2();
          try {
            var3 = var4.method3(var3);
          } catch (Type1 var5) {
            throw new Type2(var5);
          }
          break;
        }
      }, Type0 var0 = method0(var1);, Type0 var0 = method0(str0);, Type0 var0 = new Type0(var1, var2);, final Type0 var0 = var1;, Type0 var0 = var1.method0(var2.method1());, Type0 var0 = null;, var0.method0(var1), var0.method0(), !var0.method0().method1(var1.method0()), var0.method0(var1, var2), Type0 var0 = (Type0) var1;, var0 = var1.method0(var2.method1())]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return name;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return name;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return retval;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return retval;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return classLoader;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return classLoader;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return applicationCL;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return applicationCL;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return threadLoader;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return var0;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/NSQuotaExceededException.java:
9
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return threadLoader;
}

insert
{
      return var0;
    }
[Type0 var0 = super.var1();, this.var0 = var0]
[]
===========

now:3
now:4
now:5
now:6
now:7
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  done=true;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
          var0 = true;
        }
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/BlockPlacementPolicyDefault.java:
3
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  done=true;
}

insert
{
          var0 = true;
        }
[final Type0[] var0 = var1.method0(
            var2.method1());, Type0 var0 = null;, final int var0 = method0(var1[var2],
              var3, var4, var5, var6, var7,
              var8, var9);, for (int var0 = 0; var0 < var1.method0(var2.method1(), var3); var0++) {
        Type0 var4 = var2.method2(var0);
        // Choose a single node which is local to favoredNode.
        // 'results' is updated within chooseLocalNode
        final Type1 var5 = method3(var4,
            var6, var7, 
            method4(var8.method1(), var3)[1],
            var8, var9, var10);
        if (var5 == null) {
          var11.method5(str0 + var12
              + str1 + var4); 
          continue;
        }
        var6.method6(var5.method7());
      }, for (int var0 = 0; var0 < var1; var0++) {
          var2.method0(var3[var0]);
        }, int var0;, for(int var0 = var1 + 1; var0 < var2; var0++) {
          int var3 = var4.method0(var5,
              var6[var0].method1());
          if (var7>var3) {
            var7 = var3;
            var8 = var6[var0];
            var9 = var0;
          }
        }, int var0 = var1.method0(
        var2, var3);]
[]
===========

now:8
now:9
now:10
now:11
now:12
now:13
now:14
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=Layer.FOREGROUND;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=Layer.FOREGROUND;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=Layer.BACKGROUND;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=Layer.BACKGROUND;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.TOP;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.TOP;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.LEFT;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.LEFT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  result=RectangleEdge.RIGHT;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      var0 = var1;
    }
from
10919_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10919_0/after/XAttrHelper.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  result=RectangleEdge.RIGHT;
}

insert
{
      var0 = var1;
    }
[final Type0 var0 = var1.method0(0, var2).method1();, var0.method0(var1.method1().method2()), var0.method0() + str0 + var1.method1(), var0.method0(), Type0 var0 = var1.method0().method1();]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.m_numDigits=digits;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.m_numDigits=digits;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.name=name;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.name=name;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.width=width;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.width=width;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.height=height;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.height=height;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  this.showZeroDays=show;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      this.var0 = var0;
    }
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/BlockLocation.java:
48
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  this.showZeroDays=show;
}

insert
{
      this.var0 = var0;
    }
[]
[]
===========

now:17
now:18
now:19
now:20
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
{
  return;
}

at Insert After
Block::null
org.jfree.chart.util.ShapeUtilities:280
Context:P:IfStatement{elseStatement},L:Block{thenStatement},R:
Applied Change
insert
{
      return;
    }
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:IfStatement{elseStatement},L:Block{thenStatement},R:
{
  return;
}

insert
{
      return;
    }
[long var0 = var1.method0();, !method0(var0)]
[]
===========

now:21
now:22
now:23
now:24
now:25
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator1
to
iterator2
at line 280
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator2
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator1
to
iterator2
at line 280
Applied Change
update
var0
to
method0
from
9150_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9150_0/after/FileSystem.java:
15
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator2
update
var0
to
method0
[]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator2
to
iterator1
at line 280
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator1
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator2
to
iterator1
at line 280
Applied Change
update
var0
to
method0
from
9150_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9150_0/after/FileSystem.java:
15
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator1
update
var0
to
method0
[]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean result=false;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:WhileStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:WhileStatement{statements}
boolean result=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:WhileStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:WhileStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:WhileStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:WhileStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
update
isDone
to
next
at line 278
Applied Change
update
method0
to
method0
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
497
P:MethodInvocation{name},L:SimpleName{expression},R:
next
update
method0
to
method0
[]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
update
isDone
to
next
at line 278
Applied Change
update
method0
to
method0
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
497
P:MethodInvocation{name},L:SimpleName{expression},R:
next
update
method0
to
method0
[]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
name
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
name
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
temp
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
temp
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
objects
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
objects
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
top
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
top
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
right
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
right
insert
var0
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
i=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
i=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=193
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=193
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
start=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
start=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
size=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
size=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
iterator2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
p1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
p2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
cnse
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
cnse
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
g2
at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
g2
insert
var0
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
size();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
size();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
dispose();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
dispose();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getMinuteSuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getMinuteSuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getDaySuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getDaySuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
getHourSuffix();

at Insert After
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
Applied Change
insert
method0()
from
9439_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9439_0/after/JniBasedUnixGroupsMapping.java:
2
P:InfixExpression{extendedOperands},L:MethodInvocation{rightOperand},R:
getHourSuffix();

insert
method0()
[!var0.method0()]
[var0.method0(str0), var0.method0(str0 + var1, var2)]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
this.dayFormatter.format(days);

at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
this.var0.method0(var1)
from
8341_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8341_0/after/HadoopArchives.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
this.dayFormatter.format(days);

insert
this.var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
this.secondFormatter.format(seconds);

at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
this.var0.method0(var1)
from
8341_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8341_0/after/HadoopArchives.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
this.secondFormatter.format(seconds);

insert
this.var0.method0(var1)
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
p1
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
iterator2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
p2
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
saved
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
saved
insert
var0
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
l2
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
var0
from
9220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9220_0/after/ActiveStandbyElector.java:
1
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
l2
insert
var0
[]
[]
===========

now:3
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
-1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
-1
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/FSNamesystem.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
-1
insert
-1
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
-1
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
-1
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/FSNamesystem.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
-1
insert
-1
[]
[]
===========

now:4
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
""
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
""
at Insert Before
MethodInvocation::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
Applied Change
insert
str0
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/NamenodeJspHelper.java:
5
P:InfixExpression{leftOperand},L:,R:MethodInvocation{leftOperand}
""
insert
str0
[for (Type0 var0 : var1) {
        var2 += var0.method0() ? 1 : 0;
      }, var0.method0(str0
          + ((var1 - var2) / 1000)
          + str1
          + var3
          + str2
          + method1(var4, var5)
          + str3
          + method1(var6, var5)
          + str4
          + method1(var7, var5)
          + str5
          + method1(var8, var5)
          + str6
          + var9
          + str7
          + var10.method2((int)var11, 100) 
          + str8
          + var12 
          + str9 + str10
          + var13.method3() + str11 + var13.method4()+str12
          + str13
          + method1(var14, var5)
          + str14
          + var15
          + str15
          + var13.method5() + str12)]
[]
===========

now:1
now:2
now:3
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
i++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
i++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
index++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
index++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
j++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
j++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
columnIndex++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
columnIndex++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p2.npoints++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
p2.npoints++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

now:4
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int count=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int count=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int listSize=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int listSize=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int size=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int size=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

now:5
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeBoolean(false)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeBoolean(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeBoolean(true)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeBoolean(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.setShowZeroDays(false)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rdf.setShowZeroDays(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.setShowZeroDays(true)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rdf.setShowZeroDays(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

now:6
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
current=aci.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
current=aci.next();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
current=aci.first();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
current=aci.first();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
c1=it1.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
c1=it1.next();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
c2=it2.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
c2=it2.next();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
w=frame.getWidth();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
w=frame.getWidth();

insert
var0 = var1.method0()
[]
[]
===========

now:7
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

now:8
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2(isDone);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
iterator2(isDone);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator1(isDone);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
iterator1(isDone);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator1(next);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
iterator1(next);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2(next);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
iterator2(next);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p0(closePath);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
p0(closePath);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:9
now:10
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y0=rect1.getY();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y0=rect1.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y=rect2.getY();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y=rect2.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x0=rect1.getX();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double x0=rect1.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x=rect2.getX();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double x=rect2.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double height=rect2.getHeight();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double height=rect2.getHeight();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:11
now:12
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int count=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int count=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int listSize=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int listSize=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int size=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int size=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:13
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform.getRotateInstance(angle,x,y);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform.getRotateInstance(angle,x,y);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:14
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
String signPrefix;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
String signPrefix;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0;

insert
Type0 var0;
[]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform saved=g2.getTransform();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
5
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform saved=g2.getTransform();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:17
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean result=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean result=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:18
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final PathIterator[] var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final PathIterator[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final PathIterator[] var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final PathIterator[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

now:19
now:20
now:21
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Shape result=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Shape result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

now:22
now:23
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (iterator2 == 0) {
  throw new GeneralPath("");
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (iterator2 == 0) {
  throw new GeneralPath("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (iterator1 == 0) {
  throw new GeneralPath("");
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (iterator1 == 0) {
  throw new GeneralPath("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p1 == 0) {
  throw new PathIterator("");
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (p1 == 0) {
  throw new PathIterator("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p1 == 0) {
  throw new PathIterator("");
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (p1 == 0) {
  throw new PathIterator("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

now:24
now:25
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
String version=System.getProperty("java.vm.specification.version");

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:278
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0(str0);
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:generateEncryptedKey:7483
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
String version=System.getProperty("java.vm.specification.version");

insert
Type0 var0 = var1.method0(str0);
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
[var0.method0(), var0.method0(var1, new Type0(var2.method1(),
          str0), new Type1(method2(var3))), var0.method0(var1,
          new Type0(var2.method1(), str0),
          new Type1(method2(var3.method3()))), byte[] var0 =
          var1.method0(var2.method1().method2());, byte[] var0 = new byte[var1.method0().var2];, byte[] var0 = new byte[var1];, var0 < var1, Type0 var0 = var1.method0(var2);, Type0 var0 =
          var1.method0(var2.method1());]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator1
to
iterator2
at line 278
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator2
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator1
to
iterator2
at line 278
Applied Change
update
var0
to
method0
from
9150_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9150_0/after/FileSystem.java:
15
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator2
update
var0
to
method0
[]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator2
to
iterator1
at line 278
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator1
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator2
to
iterator1
at line 278
Applied Change
update
var0
to
method0
from
9150_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9150_0/after/FileSystem.java:
15
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator1
update
var0
to
method0
[]
[]
===========

now:1
now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform saved=g2.getTransform();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
2
P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform saved=g2.getTransform();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:2
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
name
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
name
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
temp
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
temp
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
objects
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
objects
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
top
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
top
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
right
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
right
insert
var0
[]
[]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
i=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
i=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=193
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=193
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
start=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
start=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
size=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:283
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
size=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

now:1
now:2
now:3
now:1
Trigger tests - 2 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
d1
to
d2
at line 283
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
99
P:MethodInvocation{arguments},L:SimpleName{name},R:
d2
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator1
to
iterator2
at line 283
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator2
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result.add(clone.item());

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
1
P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
result.add(clone.item());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.format(c1.getTime());

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
1
P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
rdf.format(c1.getTime());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
versions.add(strtok.nextToken());

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
1
P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
versions.add(strtok.nextToken());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
set.index(stream.readObject());

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
1
P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
set.index(stream.readObject());

insert
var0.method0(var1.method1())
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeBoolean(pi.isDone());

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
Applied Change
insert
var0.method0(var1.method1())
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/ContainerLogsPage.java:
1
P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:IfStatement{statements}
stream.writeBoolean(pi.isDone());

insert
var0.method0(var1.method1())
[]
[]
===========

now:1
now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform saved=g2.getTransform();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
2
P:WhileStatement{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform saved=g2.getTransform();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:2
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
name
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
name
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
temp
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
temp
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
objects
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
objects
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
top
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
top
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
right
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
right
insert
var0
[]
[]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
i=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
i=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=193
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=193
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
start=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
start=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
size=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:284
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
size=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

now:1
Trigger tests - 2 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
d2
to
d1
at line 284
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
99
P:MethodInvocation{arguments},L:SimpleName{name},R:
d1
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
update
iterator2
to
iterator1
at line 284
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
iterator1
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:2
now:1
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
name
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
name
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
temp
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
temp
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
objects
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
objects
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
top
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
top
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
right
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
right
insert
var0
[]
[]
===========

now:2
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
i=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
i=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=193
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=193
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
start=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
start=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
size=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
size=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
update
PathIterator
to
Type0
at line 275
Applied Change
update
Type0
to
Type0
from
8770_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8770_0/after/Trash.java:
70
P:VariableDeclarationStatement{type},L:,R:VariableDeclarationFragment{fragments}
Type0
update
Type0
to
Type0
[]
[Type0 var0 = var1.method0(var2);, this(var0.method0(var1), var1);, Type0 var0 = new Type0(var1.method0(var2.method1(), var3), var3);]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
update
PathIterator
to
Type0
at line 275
Applied Change
update
Type0
to
Type0
from
8770_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8770_0/after/Trash.java:
70
P:VariableDeclarationStatement{type},L:,R:VariableDeclarationFragment{fragments}
Type0
update
Type0
to
Type0
[]
[Type0 var0 = var1.method0(var2);, this(var0.method0(var1), var1);, Type0 var0 = new Type0(var1.method0(var2.method1(), var3), var3);]
===========

now:1
now:2
now:3
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
i++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
i++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
index++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
index++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
j++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
j++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
columnIndex++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
columnIndex++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
seg1++
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
seg1++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

now:4
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int count=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int count=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int listSize=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int listSize=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int size=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int size=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

now:5
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeBoolean(false)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeBoolean(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeBoolean(true)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeBoolean(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.setShowZeroDays(false)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rdf.setShowZeroDays(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.setShowZeroDays(true)
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rdf.setShowZeroDays(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

now:6
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
w=frame.getWidth();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
w=frame.getWidth();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
h=frame.getHeight();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
h=frame.getHeight();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
x=frame.getX();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
x=frame.getX();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=rectangle.getMinY();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=rectangle.getMinY();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=rectangle.getMinX();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=rectangle.getMinX();

insert
var0 = var1.method0()
[]
[]
===========

now:7
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

now:8
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p0(closePath);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
p0(closePath);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result(closePath);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result(closePath);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1(getWindingRule);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
p1(getWindingRule);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rect2(getWidth);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rect2(getWidth);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rect1(getX);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rect1(getX);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:9
now:10
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y0=rect1.getY();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y0=rect1.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y=rect2.getY();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y=rect2.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x0=rect1.getX();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double x0=rect1.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x=rect2.getX();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double x=rect2.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double height=rect2.getHeight();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double height=rect2.getHeight();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:11
now:12
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int count=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int count=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int listSize=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int listSize=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int size=size();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int size=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:13
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform.getRotateInstance(angle,x,y);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform.getRotateInstance(angle,x,y);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:14
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
String signPrefix;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
String signPrefix;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0;

insert
Type0 var0;
[]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform saved=g2.getTransform();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
5
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform saved=g2.getTransform();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:17
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean result=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean result=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:18
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final GeneralPath[] var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final GeneralPath[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final PathIterator[] var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final PathIterator[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final PathIterator[] var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final PathIterator[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

now:19
now:20
now:21
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Shape result=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Shape result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

now:22
now:23
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p1 == 0) {
  throw new PathIterator("");
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (p1 == 0) {
  throw new PathIterator("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (iterator1 == 0) {
  throw new GeneralPath("");
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (iterator1 == 0) {
  throw new GeneralPath("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p1 == 0) {
  throw new PathIterator("");
}

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (p1 == 0) {
  throw new PathIterator("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

now:24
now:25
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
String version=System.getProperty("java.vm.specification.version");

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0(str0);
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:generateEncryptedKey:7483
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
String version=System.getProperty("java.vm.specification.version");

insert
Type0 var0 = var1.method0(str0);
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
[var0.method0(), var0.method0(var1, new Type0(var2.method1(),
          str0), new Type1(method2(var3))), var0.method0(var1,
          new Type0(var2.method1(), str0),
          new Type1(method2(var3.method3()))), byte[] var0 =
          var1.method0(var2.method1().method2());, byte[] var0 = new byte[var1.method0().var2];, byte[] var0 = new byte[var1];, var0 < var1, Type0 var0 = var1.method0(var2);, Type0 var0 =
          var1.method0(var2.method1());]
===========

now:1
now:2
now:3
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
i++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
i++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
index++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
index++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
j++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
j++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
columnIndex++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
columnIndex++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
seg2++
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0++
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSEditLogOp.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
seg2++
insert
var0++
[]
[Type0 var0 = new Type0();, var0.method0(var1), this.var0.method0(var1), var0.method0(var1, var2), this.var0 = new Type0(
            new Type1(var0, this.var1)), this.var0 = var0, this.var0 = method0(var1, var2), Type0[] var0 = new Type0[var1];, this.var0 = var1.method0(
          var2, var3), for (int var0 = 0; var0 < var1; var0++) {
        Type0 var2 = new Type0();
        var2.method0(var3);
        var4[var0] = var2;
      }, for(int var0=0; var0<var1; var0++) {
        var2[var3++] = new Type0(var4[var0]);
      }, for(int var0=0; var0<var1;var0++) {
        var2[var0]= var3.method0(var4);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3.method0(var4[var0]);
      }, for (int var0 = 0; var0 < var1; var0++) {
        var2[var0] = var3[var0].method0();
      }]
===========

now:4
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int count=size();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int count=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int listSize=size();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int listSize=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int size=size();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
long var0 = method0();
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:closeFile:12323
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int size=size();

insert
long var0 = method0();
[method0()]
[this.var0.method0(), var0.method0(), method0()]
===========

now:5
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeBoolean(false)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeBoolean(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
stream.writeBoolean(true)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
stream.writeBoolean(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.setShowZeroDays(false)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rdf.setShowZeroDays(false)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
rdf.setShowZeroDays(true)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(false)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
rdf.setShowZeroDays(true)
insert
var0.method0(false)
[Type0 var0 = (Type0)var1;, var0.method0(), !var0.method0() || ((Type0)var0).method1() != null, var0 != null && var0.method0()? ((Type0)var0).method1(): null]
[]
===========

now:6
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
w=frame.getWidth();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
w=frame.getWidth();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
h=frame.getHeight();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
h=frame.getHeight();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
x=frame.getX();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
x=frame.getX();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=rectangle.getMinY();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=rectangle.getMinY();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result=rectangle.getMinX();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result=rectangle.getMinX();

insert
var0 = var1.method0()
[]
[]
===========

now:7
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int var0=var1;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int var0=var1;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int var0=var1;

insert
int var0 = var1;
[final Type0[] var0 = var1.method0();, Type0[] var0 = new Type0[var1];, Type0[] var0 = method0(var1);, Type0[] var0 = method0(var1, var2);, Type0[] var0 = var1.method0();, final Type0 var0 = var1.method0(
          method1(var2), false);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, var3);, Type0 var0 = var1.method0(var2,
          var3, false);, var0.method0()]
[final Type0 var0 = var1.method0(var2, true);, final Type0 var0 = var1.method0(var2, false);, final Type0 var0 = 
          var1.method0(var2.method1(), var3);, final Type0 var0 = var1.method0();, var0.method0() == null]
===========

now:8
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p0(closePath);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
p0(closePath);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
result(closePath);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
result(closePath);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
p1(getWindingRule);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
p1(getWindingRule);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2(next);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
iterator2(next);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
iterator2(isDone);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
iterator2(isDone);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:9
now:10
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y0=rect1.getY();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y0=rect1.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double y=rect2.getY();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double y=rect2.getY();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x0=rect1.getX();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double x0=rect1.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double x=rect2.getX();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double x=rect2.getX();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
double height=rect2.getHeight();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = var1.method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
double height=rect2.getHeight();

insert
int var0 = var1.method0();
[]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:11
now:12
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int count=size();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int count=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int listSize=size();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int listSize=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
int size=size();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
int var0 = method0();
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/FSImageFormat.java:loadFilesUnderConstruction:13630
11
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
int size=size();

insert
int var0 = method0();
[Type0 var0 = var1;]
[int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(str0 + var1), var0.method0(str0 + var1 +
                 str1 + var2), var0.method0(str0 + var1.method1() + str1 
          + (method2() - var2)/1000 + str2)]
===========

now:13
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform.getRotateInstance(angle,x,y);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1, var2, var3)
from
7933_1:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7933_1/after/FSNamesystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform.getRotateInstance(angle,x,y);

insert
var0.method0(var1, var2, var3)
[Type0 var0 = (Type0) var1;, Type0 var0;, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, method2(var0));
      var2.method0(str2, var0.method3().method4());
      var3.method0(var0.method5(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, method1(var0));
      var2.method0(str1, var0.method2());
      var3.method0(var0.method3(), var2);
    }, for (Type0 var0 : var1) {
      final Type1<Type2, Type3> var2 = new Type4<Type2, Type3>();
      var2.method0(str0, var3
          .method1());
      var2.method0(str1, var3
          .method2());
      var2.method0(str2, var3
          .method3());
      var4.method0(var0.method4(), var2);
    }, Type0 var0 = new Type0(
                                    var1.method0(),
                                    var1.method1(),
                                    var1.method2(),
                                    var1.method3(),
                                    var1.method4(),
                                    var1.method5(),
                                    var2,
                                    var3,
                                    var4);, var0 = var1.method0(), int var0 = var1.method0();, Type0[] var0 = var1.method0();, var0.method0(), var0.method0(var1), Type0 var0 = null;]
[]
===========

now:14
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
String signPrefix;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
String signPrefix;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0;

insert
Type0 var0;
[]
[]
===========

now:15
now:16
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
AffineTransform saved=g2.getTransform();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
5
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
AffineTransform saved=g2.getTransform();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:17
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean result=false;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean result=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
boolean var0=false;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:18
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final PathIterator[] var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final PathIterator[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final GeneralPath[] var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final GeneralPath[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
final GeneralPath[] var0;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0[] var0;
from
10158_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10158_0/after/KerberosAuthenticationHandler.java:
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
final GeneralPath[] var0;

insert
final Type0[] var0;
[this.var0 = var0, !new Type0(var0).method0()]
[var0 = var1.method0(var2, var0), Type0 var0 = var1.method0(var2, null);]
===========

now:19
now:20
now:21
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
Shape result=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Shape result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
GeneralPath var0=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
GeneralPath var0=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
PathIterator var0=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
19
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
PathIterator var0=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

now:22
now:23
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p1 == 0) {
  throw new PathIterator("");
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (p1 == 0) {
  throw new PathIterator("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p2 == 0) {
  throw new PathIterator("");
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (p2 == 0) {
  throw new PathIterator("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

=========
Class:org.jfree.chart.util.ShapeUtilities
insert
if (p1 == 0) {
  throw new PathIterator("");
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
if (var0 == 0) {
      throw new Type0(str0);
    }
from
10121_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10121_0/after/GenericOptionsParser.java:validateFiles:12812
2
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
if (p1 == 0) {
  throw new PathIterator("");
}

insert
if (var0 == 0) {
      throw new Type0(str0);
    }
[Type0[] var0 = var1.method0(str0, 2);, Type0[] var0 = var1.method0(str0);, Type0 var0 = var1.method0(str0)
    .method1()
    .method2(str1 +
           str2)
    .method3(str3);]
[Type0[] var0 = new Type0[var1];]
===========

now:24
now:25
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.util.ShapeUtilities
insert
String version=System.getProperty("java.vm.specification.version");

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.util.ShapeUtilities:275
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0(str0);
from
10872_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10872_0/after/KeyProviderCryptoExtension.java:generateEncryptedKey:7483
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:VariableDeclarationStatement{statements}
String version=System.getProperty("java.vm.specification.version");

insert
Type0 var0 = var1.method0(str0);
[Type0 var0 = var1.method0(str0);, var0.method0(str0)]
[var0.method0(), var0.method0(var1, new Type0(var2.method1(),
          str0), new Type1(method2(var3))), var0.method0(var1,
          new Type0(var2.method1(), str0),
          new Type1(method2(var3.method3()))), byte[] var0 =
          var1.method0(var2.method1().method2());, byte[] var0 = new byte[var1.method0().var2];, byte[] var0 = new byte[var1];, var0 < var1, Type0 var0 = var1.method0(var2);, Type0 var0 =
          var1.method0(var2.method1());]
===========

now:1
=========
Class:org.jfree.chart.util.ShapeUtilities
update
p1
to
p2
at line 275
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
500
P:MethodInvocation{expression},L:,R:SimpleName{name}
p2
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

A Patch Found! - patches/12/org/jfree/chart/util/ShapeUtilities.java
Candidate Number:428
Checked Lines:7
Checked Fix Locs:49
Checked Changes:279
Applied Changes:137
Loading Coverage Information....Done.
Random Seed:84
Loading Change Pool...Done.
Pool:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/pool/letspatch_pool
Preparing patch generation...
Done.
Loading Class - org.jfree.chart.renderer.GrayPaintScale
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
max
to
min
at line 124
Applied Change
update
method0
to
method0
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
386
P:MethodInvocation{name},L:SimpleName{expression},R:SimpleName{arguments}
min
update
method0
to
method0
[]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
lowerBound
to
upperBound
at line 124
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
upperBound
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
lowerBound
to
v
at line 124
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
v
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
lowerBound
to
value
at line 124
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
value
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
lowerBound
to
that.lowerBound
at line 124
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
that.lowerBound
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
lowerBound
to
that.upperBound
at line 124
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
that.upperBound
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
lowerBound
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
lowerBound
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
upperBound
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
upperBound
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
var0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
var0
insert
var0
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
var0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0
from
6460_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6460_0/after/Block.java:
4
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
var0
insert
var0
[]
[]
===========

now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
low=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
low=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
count=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
count=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
paint=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
paint=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
result=193
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
result=193
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
index=0
at Insert After
VariableDeclarationFragment::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
Applied Change
insert
var0 = 0
from
10361_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10361_0/after/BlockManager.java:
6
P:VariableDeclarationStatement{fragments},L:VariableDeclarationFragment{fragments},R:
index=0
insert
var0 = 0
[long var0 = 0, var1 = 0, var2 = 0;]
[]
===========

now:1
now:2
now:3
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
GrayPaintScale var0=new GrayPaintScale(this);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
GrayPaintScale var0=new GrayPaintScale(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
GrayPaintScale var0=new GrayPaintScale(this);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 
        var0 = 
          new Type0(this);
from
7778_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7778_0/after/DataNode.java:initIpcServer:25735
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
GrayPaintScale var0=new GrayPaintScale(this);

insert
Type0 
        var0 = 
          new Type0(this);
[Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, var0.method0(var1), Type0 var0 = var1.method0(var2.method1(
          str0, var3 + str1 + 0));, var0.method0(var1.method1(var2,
        var3)), final Type0 var0 = var1.method0(
        var2.method1() + str0 + var2.method2());, Type0 var0 = 
          var1.method0(var2[0].method1());, var0.method0(
        var1.method1(var2, var3)), var0.method0(var1.method1()) == null, var0.method0(str0
          + var1.method1(var2)), var0.method0(var1.method1(var2)), var0.method0(var1) != null, var0 = var1.method0(var2), var0 = var1
          .method0(var2.method1(var3,
              var4), var2.method1(
              var5,
              var6)), this.var0 = (var1 == null) 
       ? new Type0(str0, var2, var3, var3 == 0, 
           var4, new Type1(var4.method0(var5, str1)))
       : new Type0(str0, var2, var3, var3 == 0,
           var4, new Type1(var4.method0(var5, str1)),
           var1.method1()), var0.method0(var1.method1(str0,
          str1)), Type0 var0 = var1.method0(var2.method1());, var0.method0(var1,
          var2.method1(),
          var2.method2(),
          var2.method3(),
          var2.method4(var3),
          var4.method5(),
          method6(), var2.method7()), Type0 var0 = var1.method0(var2);, var0.method0(str0) != null, str0 + var0 + str1 + method0()
        + str2 + method1() + str3
        + var1.method2() + str4, var0.method0(var1.method1(var2,
                                          var3.method2())), this.method0().method1(str0), this.var0 = var0]
[var0 = var1.method0(Type0.class, this, var2.method1(),
                              var2.method2(), 
                              var3.method3(var4, 
                                          var5), 
                              false, var3, var6), this.var0 =  var1.method0(var2,
                                      var3), this.var0 = var1.method0(var2,
                                          var3), this.var0 = var1.method0(var2, 
                                       var3), var0.method0(var1,
                    var2) < 0, var0.method0(var1, 
                    var2) < 0, Type0 var0 = var1.method0(
        var2.method1(str0));, Type0 var0 = var1.method0(
        this.method1().method2(var2));, int var0 = var1.method0();, var0.method0(var1.method1()), var0.method0(method1()), var0.method0(), var0 + str0 + method0(), var0.method0().method1(), var0 = method0(var1.method1()), this.var0.method0(), new Type0(method0(), method1(),
        var0.method2(), method3()), var0 = method0(var1), Type0 var0 = var1.method0();, var0.method0(var1.method1().method2(), var2), this.var0 = var0, this.var0 = new Type0()]
===========

now:4
now:5
now:6
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Iterator iterator=ticks.iterator();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Iterator iterator=ticks.iterator();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Point2D p2=outlier.getPoint();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Point2D p2=outlier.getPoint();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Boolean b=getSeriesCreateEntities.series();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Boolean b=getSeriesCreateEntities.series();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Shape shape=lookupSeriesShape.series();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Shape shape=lookupSeriesShape.series();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Paint paint=lookupSeriesPaint.series();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Paint paint=lookupSeriesPaint.series();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:7
now:8
now:9
now:10
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
dataset.getXValue(series,low)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1, var2)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
dataset.getXValue(series,low)
insert
var0.method0(var1, var2)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
dataset.getXValue(series,mid)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1, var2)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
dataset.getXValue(series,mid)
insert
var0.method0(var1, var2)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
dataset.getXValue(series,high)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1, var2)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
dataset.getXValue(series,high)
insert
var0.method0(var1, var2)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
dataset.getXValue(series,index)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1, var2)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
dataset.getXValue(series,index)
insert
var0.method0(var1, var2)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
dataset.getYValue(seriesIndex,i)
at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1, var2)
from
7853_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7853_0/after/UserGroupInformation.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
dataset.getYValue(seriesIndex,i)
insert
var0.method0(var1, var2)
[]
[]
===========

now:11
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
result=list.add(outlier);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0 = var1.method0(var2)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/ResourceLocalizationService.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
result=list.add(outlier);

insert
var0 = var1.method0(var2)
[var0.method0(), var0.method0(str0 + var1.method1(),
                  var2.method2()), Type0 var0 = var1.method0();, Type0 var0 = var1.method0().method1();, var0.method0().method1(
                  new Type0(
                    var1.method2().method3(),
                    var1.method4().method5(), var2.method6())), Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var1.method2(), var3));
      }, for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var3.method2()));
      }, Type0 var0 =
          (Type0)var1;, Type0 var0 = null;]
[var0.method0(str0
                + str1, var1), var0.method0(str0 + var1), for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var1.method2(), var3));
      }, for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var3.method2()));
      }, Type0 var0 =
          (Type0)var1;, Type0 var0 = var1.method0().method1();, Type0 var0 = null;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
updated=updateOutlierList.list(outlier);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0 = var1.method0(var2)
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/ResourceLocalizationService.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
updated=updateOutlierList.list(outlier);

insert
var0 = var1.method0(var2)
[var0.method0(), var0.method0(str0 + var1.method1(),
                  var2.method2()), Type0 var0 = var1.method0();, Type0 var0 = var1.method0().method1();, var0.method0().method1(
                  new Type0(
                    var1.method2().method3(),
                    var1.method4().method5(), var2.method6())), Type0 var0 = var1.method0(var2);, for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var1.method2(), var3));
      }, for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var3.method2()));
      }, Type0 var0 =
          (Type0)var1;, Type0 var0 = null;]
[var0.method0(str0
                + str1, var1), var0.method0(str0 + var1), for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var1.method2(), var3));
      }, for (Type0 var0 : var1.method0()) {
        var2.method1(new Type1(var0, var3.method2()));
      }, Type0 var0 =
          (Type0)var1;, Type0 var0 = var1.method0().method1();, Type0 var0 = null;]
===========

now:12
now:13
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Boolean.valueOf(visible);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
12
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Boolean.valueOf(visible);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Boolean.valueOf(filled);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
12
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Boolean.valueOf(filled);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
g2.draw(poly);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
12
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
g2.draw(poly);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
list.contains(listener);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
12
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
list.contains(listener);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
p1.equals(p2);

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
12
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
p1.equals(p2);

insert
var0.method0(var1)
[]
[]
===========

now:14
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
result=b.booleanValue();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
result=b.booleanValue();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
result=p.getDrawingSupplier();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
result=p.getDrawingSupplier();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
result=owner.getEntityCollection();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
result=owner.getEntityCollection();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
result=supplier.getNextShape();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
result=supplier.getNextShape();

insert
var0 = var1.method0()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
result=supplier.getNextStroke();

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
var0 = var1.method0()
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/WebHdfsFileSystem.java:
1
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
result=supplier.getNextStroke();

insert
var0 = var1.method0()
[]
[]
===========

now:15
now:16
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Object result=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Object result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
DrawingSupplier result=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
DrawingSupplier result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Point2D result=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Point2D result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
LegendItem result=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
LegendItem result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
EntityCollection result=null;

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
4
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
EntityCollection result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

now:17
now:18
now:19
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
if (g >= 0) {
  return false;
}

at Insert After
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
Applied Change
insert
if (var0 >= 0) {
      return false;
    }
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/INodeDirectory.java:addChild:9651
3
P:MethodDeclaration{statements},L:VariableDeclarationStatement{statements},R:Assignment{statements}
if (g >= 0) {
  return false;
}

insert
if (var0 >= 0) {
      return false;
    }
[final int var0 = method0(var1.method1());, final int var0 = method0(var1);]
[]
===========

now:20
now:21
now:1
now:2
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
final GrayPaintScale var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
final GrayPaintScale var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
final GrayPaintScale var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
final Type0 var0;
from
8753_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8753_0/after/DataXceiver.java:writeBlock:15310
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
final GrayPaintScale var0;

insert
final Type0 var0;
[Type0 var0 = var1;, method0(var0, null, var1)]
[var0.method0(var1, var2, var3), this.var0 = var0, var0 = var1.method0(var2), Type0 var0 = var1.method0(var2);, var0 = var1.method0(), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3()), var0.method0()
          .method1(var1)
          .method2(var2), var0.method0(var1.method1()), var0.method0(var1), var0.method0() != var1, var0.method0() == var1, var0.method0(var1, var2, var3,
            var4, null, var5), var0.method0(null, null, null, null, 
          var1, null), Type0 var0 = var1;, Type0 var0 = null;, new Type0(var0).method0(var1, var2,
              var3, var4, var5, var6, var7,
              var8, var9, var10, var11,
              var12), Type0 var0 =
                var1.method0(
                    var2, var3,
                    var4
                        .method1(var5.method2()));, Type0 var0 =
            var1.method0(
                var2, var3,
                var4
                    .method1(var5.method2()));, var0.method0(var1.method1(
            str0 +
            str1,
            var2.method2(), var3.method3(), (var4 != null)
          )), var0.method0(str0 + var1 + str1 + var2 + str2
        + var3), var0.method0(str0 + var1 +
                       str1 +
                       str2 +
                       var2), var0.method0(var1 + str0 +
                     var2 + str1 + var3 +
                     str2, var4), var0.method0(str0 + var1 +
                   str1 +
                   var2), var0.method0(str0 + var1 + str1 + var2 + str2
            + var3 + str3 + var1.method1()), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2.method1()), Type0 var0 = (var1 == null) ? null : var2;, Type0 var0 = var1.method0(var2
            .method1());, Type0 var0 = 
      var1.method0(var2.method1());, var0 = var1, this.var0 = var1.method0(), Type0 var0 = var1.method0(var2,
              var3);, this.var0 = var1.method0().var0, var0.method0(), var0.method0() || var1 != var2, var0 = var1[0].method0(var2), final Type0 var0 = var1.method0(var2);, Type0 var0 = var1.method0(
              var2.method1(var3));, Type0 var0 =
              var1.method0(var2.method1(var3));, Type0 var0 = var1.method0(
          var2.method1(var3));, final Type0 var0 = new Type0(var1);, int var0 = var1 + 
                      (var2 * var3);, var0.method0(var1 + str0 +
                      var2 + str1 + var3 + str2 + var4), var0.method0(var1 + str0 + var2 + str1 +
            var3, var4), var0.method0(str0), var0.method0(str0 + var1.method1() +
                str1 +
                str2), var0 = new Type0(var1, var2, 
            var3.method0(),
            var3.method1(),
            var4, var5, var6, var7,
            var8, var9, var10, var11,
            var12), Type0 var0 = str0 + var1.method0() + str1 +
          str2 + var2.method1() + str3 +
          str4;, Type0 var0 = str0 + var1.method0() +
          str1 + var2.method1() + str2 +
          str3;, var0.method0(str0 + var1.method1()), int var0 = var1
              + (var2 * var3);, Type0 var0 = str0;, var0.method0().method1(var1), var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4()
              .method5(var3), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3()
          .method4(var3), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11()
        .method12(var9), final Type0 var0 = new Type0(
        new Type1(
            method0(),
            var1));, var0.method0(str0
          + var1.method1()), var0.method0(str0, var1), var0.method0(str0 + var1 + str1 + var2 
      		+ str2 + var3 + str3 + var4
      		+ str4 + var5 + str5 + var6 + str6
          + str7 + var7.method1(var8)
          + str8 + var9 + str9 + var10
          ), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3), var0.method0(str0 + var1.method1() +
                str1 + var1.method2()), var0.method0(str0 + var1), var0.method0(str0 + var1 + str1 + var2
            + str2 + var3 + str3 + var4), var0.method0(str0 + var1.method1()
            + str1 + var2 + str2), method0(var0, null, var1), try {
      if (var0.method0() == null) {
        throw new Type0(str0 +
            str1);
      }
      var1 = var2.method1(var3, var4, var5);
      var6.method2(var7);
      var6.method3(var8);
    } catch (Type1 var9) {
      var6.method2(var10);
      var6.method3(var8);
      var6.method4(var9.method5());
    } catch (Type2 var9) {
      var6.method2(var10);
      var6.method4(var9.method5());
    } catch (Type3 var9) {
      var6.method2(var11);
      var6.method4(var9.method5());
    } catch (Type0 var9) {
      var6.method2(var12);
      var6.method4(var9.method5());
    }, try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }, try {
          int var0 = var1
              + (var2 * var3);
          int var4 = var5 + 
                      (var6 * var3);
          var7.method0(var8, var9, var0);
          var8.method1(var0);
          var8.method2(var10);
          
          Type0 var11 = var7.method3(var8,
              var4);
          Type1 var12 = var7.method4(var8);
          if (var13) {
            Type2 var14 =
                var15.method5(
                    var11, var12,
                    var16
                        .method6(var17.method7()));
            
            var11 = var18;
            var12 = var19;
          }
          var20 = new Type3(new Type4(var11,
              var21));
          var22 = new Type5(var12);

          new Type6(var20).method8(var23, var24,
              var25, var26, var27, var28, var29,
              var30, var31, var32, var33,
              var34);

          var20.method9();

          // read connect ack (only for clients, not for replication req)
          if (var35) {
            Type7 var36 =
              var37.method10(var38.method11(var22));
            var39 = var36.method12();
            var40 = var36.method13();
            if (var41.method14() || var39 != var42) {
              var41.method15(str0 + var3 +
                       str1 +
                       str2 +
                       var40);
            }
          }

        } catch (Type8 var43) {
          if (var35) {
            var37.method16()
              .method17(var44)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method18(var26[0].method19())
              .method20()
              .method21(var45);
            var45.method9();
          }
          var46.method22(var20);
          var20 = null;
          var46.method22(var22);
          var22 = null;
          var46.method23(var8);
          var8 = null;
          if (var35) {
            var41.method24(var47 + str3 +
                      var17 + str4 + var48 + str5 + var43);
            throw var43;
          } else {
            var41.method15(var47 + str6 +
                     var17 + str4 + var48 +
                     str7, var43);
          }
        }, try {
        var0.method0(var1, null, var2,
            var3);
      } catch (Type0 var4) {
        var5.method1(str0 + var6
            + str1 + var2 + str2
            + var4.method2());
        method3(var7, str3);
        return;
      }, try {
        var0.method0(var1, null, var2, var3);
      } catch(Type0 var4) {
        try {
          if (var5) {
            Type1 var6 = var7.method1()
              .method2(var8);
            if (var3 == var9) {
              Type2 var10 = 
                var11.method3(var2.method4());
              // NB: Unconditionally using the xfer addr w/o hostname
              var6.method5(var10.method6());
            }
            var6.method7().method8(var12);
            var12.method9();
          }
          var13.method10(str0 + var14
              + str1 + var15
              + str2 + var4.method11());
          throw var4;
        } finally {
          var16.method12(var12);
        }
      }, Type0 var0 = var1.method0()
      .method1(var2)
      .method2(var3)
      .method3();, method0(var0, var1, method1()), Type0 var0 = var1.method0();, var0.method0()
              .method1(var1), var0.method0()
          .method1(var1), var0.method0()
        .method1(var1), Type0 var0 = var1.method0()
      .method1(var2);, Type0 var0 = var1.method0()
              .method1(var2);, var0.method0()
              .method1(var1)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method2(var2[0].method3())
              .method4(), var0.method0()
          .method1(var1)
          .method2(var2)
          .method3(), var0.method0()
        .method1(var1)
        .method2(var2.method0()             
          .method3(var3)
          .method4(var4)
          .method5(var5.method6(var6.method7()))
          .method8(var7.method9(var8.method10()))
          )
        .method11(), Type0 var0 = var1.method0()
      .method1(var2.method2(var3.method3()))
      .method4(var3.method5())
      .method6();, var0.method0(var1, var2), Type0 var0 = method0();, method0(var0, new Type0(method1())), final Type0 var0 = new Type0(
        method0());, Type0 var0 = var1.method0(var2,
          var3);, try {
          Type0 var0 = var1.method0(
              var2.method1(var3));
          if (!var0.method2()) {
            var4.method3(str0 + var5.method4() +
                str1 +
                str2);
            var6.method5(var7);
          }
        } catch (Type1 var8) {
          var4.method6(str3, var8);
          var6.method5(var7);
        }, try {
      try {
        var0 = new Type0(var1, var2, var3,
            true, false, var4, var5, var6,
            var7);
      } catch(Type1 var8) {
        Type2 var9 = str0 + var1 + str1 + var8; 
        var10.method0(var9);
        method1(var11, var9);
        throw var8;
      }
      
      // send op status
      method2(var0, new Type3(method3()));

      long var12 = var0.method4(var13, var14, null); // send data

      if (var0.method5()) {
        // If we sent the entire range, then we should expect the client
        // to respond with a Status enum.
        try {
          Type4 var15 = var16.method6(
              var17.method7(var18));
          if (!var15.method8()) {
            var10.method9(str2 + var19.method10() +
                str3 +
                str4);
            var20.method11(var13);
          }
        } catch (Type1 var21) {
          var10.method12(str5, var21);
          var20.method11(var13);
        }
      } else {
        var20.method11(var13);
      }
      var22.method13((int) var12);
      var22.method14();
    } catch ( Type5 var23 ) {
      if (var10.method15()) {
        var10.method16(var24 + str6 + var1 + str7 +
            var25, var23);
      }
      // Its ok for remote side to close the connection anytime.
      var22.method14();
      var20.method11(var13);
    } catch ( Type1 var21 ) {
      /* What exactly should we do here?
       * Earlier version shutdown() datanode if there is disk error.
       */
      var10.method9(var24 + str8 + var1 + str7
          + var25, var21);
      throw var21;
    } finally {
      var20.method11(var0);
    }, try {
      if (var0 || 
          var1 != var2) {
        // open a block receiver
        var3 = new Type0(var4, var5, 
            var6.method0(),
            var6.method1(),
            var1, var7, var8, var9,
            var10, var11, var12, var13,
            var14);
      } else {
        var15.method2(var4, var7, var8);
      }

      //
      // Connect to downstream machine, if appropriate
      //
      if (var16 > 0) {
        Type1 var17 = null;
        // Connect to backup machine
        var18 = var19[0].method3(var20);
        if (var21.method4()) {
          var21.method5(str0 + var18);
        }
        var17 = var22.method6(var18);
        var23 = var12.method7();
        try {
          int var24 = var25
              + (var26 * var16);
          int var27 = var28 + 
                      (var29 * var16);
          var22.method8(var23, var17, var24);
          var23.method9(var24);
          var23.method10(var30);
          
          Type2 var31 = var22.method11(var23,
              var27);
          Type3 var32 = var22.method12(var23);
          if (var33) {
            Type4 var34 =
                var35.method13(
                    var31, var32,
                    var36
                        .method14(var4.method15()));
            
            var31 = var37;
            var32 = var38;
          }
          var39 = new Type5(new Type6(var31,
              var40));
          var41 = new Type7(var32);

          new Type8(var39).method16(var42, var43,
              var10, var19, var11, var1, var44,
              var8, var9, var7, var13,
              var14);

          var39.method17();

          // read connect ack (only for clients, not for replication req)
          if (var45) {
            Type9 var46 =
              var47.method18(var48.method19(var41));
            var49 = var46.method20();
            var50 = var46.method21();
            if (var21.method4() || var49 != var51) {
              var21.method22(str1 + var16 +
                       str2 +
                       str3 +
                       var50);
            }
          }

        } catch (Type10 var52) {
          if (var45) {
            var47.method23()
              .method24(var53)
               // NB: Unconditionally using the xfer addr w/o hostname
              .method25(var19[0].method3())
              .method26()
              .method27(var54);
            var54.method17();
          }
          var55.method28(var39);
          var39 = null;
          var55.method28(var41);
          var41 = null;
          var55.method29(var23);
          var23 = null;
          if (var45) {
            var21.method30(var12 + str4 +
                      var4 + str5 + var18 + str6 + var52);
            throw var52;
          } else {
            var21.method22(var12 + str7 +
                     var4 + str5 + var18 +
                     str8, var52);
          }
        }
      }

      // send connect-ack to source for clients and not transfer-RBW/Finalized
      if (var45 && !var56) {
        if (var21.method4() || var49 != var51) {
          var21.method22(str1 + var16 +
                   str9 +
                   var50);
        }
        var47.method23()
          .method24(var49)
          .method25(var50)
          .method26()
          .method27(var54);
        var54.method17();
      }

      // receive the block and mirror to the next target
      if (var3 != null) {
        Type11 var57 = (var23 == null) ? null : var18;
        var3.method31(var39, var41, var54,
            var57, null, var19);

        // send close-ack for transfer-RBW/Finalized 
        if (var56) {
          if (var21.method32()) {
            var21.method33(str10);
          }
          method34(var51, null, var54);
        }
      }

      // update its generation stamp
      if (var45 && 
          var1 == var2) {
        var4.method35(var7);
        var4.method36(var8);
      }
      
      // if this write is for a replication request or recovering
      // a failed close for client, then confirm block. For other client-writes,
      // the block is finalized in the PacketResponder.
      if (var0 ||
          var1 == var2) {
        var12.method37(var4, var58);
        var21.method22(str11 + var4 + str12 + var59 + str13
            + var60 + str14 + var4.method38());
      }

      
    } catch (Type10 var61) {
      var21.method22(str15 + var4 + str16 + var61);
      throw var61;
    } finally {
      // close all opened streams
      var55.method28(var39);
      var55.method28(var41);
      var55.method28(var54);
      var55.method29(var23);
      var55.method28(var3);
    }, try {
      // check if the block exists or not
      var0 = new Type0(var1, 0, -1, false, false, true, var2, 
          null, var3.method0());

      // set up response stream
      Type1 var4 = method1();
      var5 = new Type2(new Type3(
          var4, var6));

      // send status first
      method2(var0, var5);
      // send block content to the target
      long var7 = var0.method3(var5, var4, 
                                        var8);

      var9.method4((int) var7);
      var9.method5();
      
      var10.method6(str0 + var1 + str1 + var11.method7());
    } catch (Type4 var12) {
      var13 = false;
      var10.method6(str2 + var1 + str3 + var12);
      throw var12;
    } finally {
      var8.method8();
      if (var13) {
        try {
          // send one last byte to indicate that the resource is cleaned.
          var5.method9('d');
        } catch (Type4 var14) {
        }
      }
      var15.method10(var5);
      var15.method10(var0);
    }, try {
      // get the output stream to the proxy
      final Type0 var0 = var1.method0(var2);
      if (var3.method1()) {
        var3.method2(str0 + var0);
      }
      Type1 var4 = var5.method3(var0);
      var6 = var7.method4();
      var5.method5(var6, var4, var8);
      var6.method6(var8);

      Type2 var9 = var5.method7(var6,
          var10);
      Type3 var11 = var5.method8(var6);
      if (var12) {
        Type4 var13 =
            var14.method9(
                var9, var11,
                var15
                    .method10(var16.method11()));
        var9 = var17;
        var11 = var18;
      }
      
      var19 = new Type5(new Type6(var9, 
          var20));
      var21 = new Type7(new Type8(var11,
          var22));

      /* send request to the proxy */
      new Type9(var19).method12(var16, var23);

      // receive the response from the proxy
      
      Type10 var24 = var25.method13(
          var26.method14(var21));

      if (var24.method15() != var27) {
        if (var24.method15() == var28) {
          throw new Type11(str1 + var16 + str2
              + var6.method16()
              + str3);
        }
        throw new Type11(str1 + var16 + str2
            + var6.method16() + str4);
      }
      
      // get checksum info about the block we're copying
      Type12 var29 = var24.method17();
      Type13 var30 = var31.method18(
          var29.method19());
      // open a block receiver and check if the block does not exist
      var32 = new Type14(
          var16, var21, var6.method16().method20(),
          var6.method21().method20(),
          null, 0, 0, 0, str5, null, var7, var30,
          var33.method22());

      // receive a block
      var32.method23(null, null, null, null, 
          var34, null);
                    
      // notify name node
      var7.method24(var16, var35);

      var3.method25(str6 + var16 + str2 + var36.method26());
      
    } catch (Type11 var37) {
      var38 = var39;
      var40 = str7 + var16 + str8 + var37; 
      var3.method25(var40);
      throw var37;
    } finally {
      // receive the last byte that indicates the proxy released its thread resource
      if (var38 == var27) {
        try {
          var21.method27();
        } catch (Type11 var41) {
        }
      }
      
      // now release the thread resource
      var34.method28();
      
      // send response back
      try {
        method29(var38, var40);
      } catch (Type11 var37) {
        var3.method30(str9 + var36.method26());
      }
      var42.method31(var19);
      var42.method31(var32);
      var42.method31(var21);
    }, try {
        method0(var0, var1);
      } catch (Type0 var2) {
        var3.method1(str0 + var4.method2());
      }]
===========

now:3
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
value.doubleValue()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
3
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
value.doubleValue()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
max.doubleValue()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
3
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
max.doubleValue()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
getPaintIndex.value()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
3
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
getPaintIndex.value()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
radialAxis.getLowerBound()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
3
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
radialAxis.getLowerBound()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
i.next()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0()
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:
3
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
i.next()
insert
var0.method0()
[]
[Type0 var0 = method0();, Type0 var0 = var1.method0();, var0.method0(str0
                         +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2+str2+var3), var0.method0(str0
          +var1+str1+var2), var0.method0(str0 + var1
          + str1 + var2
          + str2 + var3.method1(var4)
          + str3 + var3.method1(var5)
          + str4 + var6
          + str5 + var7), var0.method0(str0
          + var1 + str1 + var2), var0.method0(str0 + var1 + str1 + var2), var0.method0(str0 + var1
          + str1 + var2), var0.method0(str0 + var1), var0.method0(str0
           + str1 + var1.method1() + str2 + var2.method2()
           + str3), var0.method0(str0
          +str1+var1.method1()+str2+var2
          +str3)]
===========

now:4
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
value(doubleValue);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
value(doubleValue);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
max(doubleValue);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
max(doubleValue);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
getPaintIndex(value);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
getPaintIndex(value);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
radialAxis(getLowerBound);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
radialAxis(getLowerBound);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
i(next);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
method0(var0)
from
7695_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7695_0/after/NameNodeRpcServer.java:endCheckpoint:11663
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
i(next);

insert
method0(var0)
[]
[this.var0 = var1.method0(), var0.method0(var1, var2)]
===========

now:5
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
plot.getAxis().getLowerBound()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0().method1()
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/RpcServerFactoryPBImpl.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
plot.getAxis().getLowerBound()
insert
var0.method0().method1()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
tick.getNumber().doubleValue()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0().method1()
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/RpcServerFactoryPBImpl.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
tick.getNumber().doubleValue()
insert
var0.method0().method1()
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
entry.getKey().toString()
at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0().method1()
from
8220_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8220_0/after/RpcServerFactoryPBImpl.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
entry.getKey().toString()
insert
var0.method0().method1()
[]
[]
===========

now:6
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Number value=(Number)i.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = 
              (Type0) var1
              .method0();
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Number value=(Number)i.next();

insert
Type0 var0 = 
              (Type0) var1
              .method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Outlier o=(Outlier)iterator.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = 
              (Type0) var1
              .method0();
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Outlier o=(Outlier)iterator.next();

insert
Type0 var0 = 
              (Type0) var1
              .method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Map.Entry entry=(Map.Entry)i.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = 
              (Type0) var1
              .method0();
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Map.Entry entry=(Map.Entry)i.next();

insert
Type0 var0 = 
              (Type0) var1
              .method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
NumberTick tick=(NumberTick)iterator.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = 
              (Type0) var1
              .method0();
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
NumberTick tick=(NumberTick)iterator.next();

insert
Type0 var0 = 
              (Type0) var1
              .method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
OutlierList list=(OutlierList)iterator.next();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = 
              (Type0) var1
              .method0();
from
9932_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9932_0/after/JobHistoryEventHandler.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
OutlierList list=(OutlierList)iterator.next();

insert
Type0 var0 = 
              (Type0) var1
              .method0();
[]
[]
===========

now:7
now:8
now:9
now:10
now:11
now:12
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
GrayPaintScale var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
5
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
GrayPaintScale var0;

insert
Type0 var0;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
GrayPaintScale var0;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0;
from
8006_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/8006_0/after/ChecksumFileSystem.java:open:11123
5
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
GrayPaintScale var0;

insert
Type0 var0;
[]
[]
===========

now:13
now:14
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean result=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = true;
from
7207_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7207_0/after/FileStatus.java:equals:2201
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean result=false;

insert
boolean var0 = true;
[this.var0 = new Type0(var1), this.method0().method1(var0.method0())]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean updated=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = true;
from
7207_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7207_0/after/FileStatus.java:equals:2201
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean updated=false;

insert
boolean var0 = true;
[this.var0 = new Type0(var1), this.method0().method1(var0.method0())]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean var0=true;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = true;
from
7207_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7207_0/after/FileStatus.java:equals:2201
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean var0=true;

insert
boolean var0 = true;
[this.var0 = new Type0(var1), this.method0().method1(var0.method0())]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean var0=true;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = true;
from
7207_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/7207_0/after/FileStatus.java:equals:2201
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean var0=true;

insert
boolean var0 = true;
[this.var0 = new Type0(var1), this.method0().method1(var0.method0())]
[]
===========

now:15
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
String description=label;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/DatanodeDescriptor.java:next:13888
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
String description=label;

insert
Type0 var0 = var1;
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Stroke outlineStroke=DEFAULT_STROKE;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/DatanodeDescriptor.java:next:13888
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Stroke outlineStroke=DEFAULT_STROKE;

insert
Type0 var0 = var1;
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
GrayPaintScale var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/DatanodeDescriptor.java:next:13888
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
GrayPaintScale var0=var1;

insert
Type0 var0 = var1;
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
GrayPaintScale var0=var1;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1;
from
10093_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10093_0/after/DatanodeDescriptor.java:next:13888
8
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
GrayPaintScale var0=var1;

insert
Type0 var0 = var1;
[]
[]
===========

now:16
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
PublicCloneable<Object> var0=new Paint<Object>();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0<Type1> var0 = new Type2<Type1>();
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/RpcProgramMountd.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
PublicCloneable<Object> var0=new Paint<Object>();

insert
Type0<Type1> var0 = new Type2<Type1>();
[]
[int var0 = var1.method0();, this.var0 = var1.method0(var0), var0 = var1.method0(var0, var2, var3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Object<PaintScale> var0=new Paint<PaintScale>();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0<Type1> var0 = new Type2<Type1>();
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/RpcProgramMountd.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Object<PaintScale> var0=new Paint<PaintScale>();

insert
Type0<Type1> var0 = new Type2<Type1>();
[]
[int var0 = var1.method0();, this.var0 = var1.method0(var0), var0 = var1.method0(var0, var2, var3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Object<PublicCloneable> var0=new Paint<PublicCloneable>();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0<Type1> var0 = new Type2<Type1>();
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/RpcProgramMountd.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Object<PublicCloneable> var0=new Paint<PublicCloneable>();

insert
Type0<Type1> var0 = new Type2<Type1>();
[]
[int var0 = var1.method0();, this.var0 = var1.method0(var0), var0 = var1.method0(var0, var2, var3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
PaintScale<PublicCloneable> var0=new Paint<PublicCloneable>();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0<Type1> var0 = new Type2<Type1>();
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/RpcProgramMountd.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
PaintScale<PublicCloneable> var0=new Paint<PublicCloneable>();

insert
Type0<Type1> var0 = new Type2<Type1>();
[]
[int var0 = var1.method0();, this.var0 = var1.method0(var0), var0 = var1.method0(var0, var2, var3)]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
PublicCloneable<PaintScale> var0=new Paint<PaintScale>();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0<Type1> var0 = new Type2<Type1>();
from
9960_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9960_0/after/RpcProgramMountd.java:
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
PublicCloneable<PaintScale> var0=new Paint<PaintScale>();

insert
Type0<Type1> var0 = new Type2<Type1>();
[]
[int var0 = var1.method0();, this.var0 = var1.method0(var0), var0 = var1.method0(var0, var2, var3)]
===========

now:17
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Iterator iterator=ticks.iterator();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
11
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Iterator iterator=ticks.iterator();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Point2D p2=outlier.getPoint();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
11
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Point2D p2=outlier.getPoint();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Boolean b=getSeriesCreateEntities.series();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
11
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Boolean b=getSeriesCreateEntities.series();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Shape shape=lookupSeriesShape.series();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
11
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Shape shape=lookupSeriesShape.series();

insert
Type0 var0 = var1.method0();
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Paint paint=lookupSeriesPaint.series();

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = var1.method0();
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/XMLUtils.java:transform:993
11
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Paint paint=lookupSeriesPaint.series();

insert
Type0 var0 = var1.method0();
[]
[]
===========

now:18
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean result=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean result=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean updated=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean updated=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
boolean var0=false;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
boolean var0 = false;
from
9230_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9230_0/after/FSDirectory.java:verifyFsLimits:55457
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
boolean var0=false;

insert
boolean var0 = false;
[]
[]
===========

now:19
now:20
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Boolean.valueOf(visible);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Boolean.valueOf(visible);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Boolean.valueOf(filled);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Boolean.valueOf(filled);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
g2.draw(poly);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
g2.draw(poly);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
list.contains(listener);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
list.contains(listener);

insert
var0.method0(var1)
[]
[]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
p1.equals(p2);

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
var0.method0(var1)
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
2
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
p1.equals(p2);

insert
var0.method0(var1)
[]
[]
===========

now:21
now:22
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Object result=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Object result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
DrawingSupplier result=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
DrawingSupplier result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
Point2D result=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Point2D result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
LegendItem result=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
LegendItem result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
insert
EntityCollection result=null;

at Insert Before
VariableDeclarationStatement::null
org.jfree.chart.renderer.GrayPaintScale:124
Context:P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
Applied Change
insert
Type0 var0 = null;
from
10368_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/10368_0/after/VersionInfo.java:VersionInfo:1534
1
P:MethodDeclaration{statements},L:,R:VariableDeclarationStatement{statements}
EntityCollection result=null;

insert
Type0 var0 = null;
[Type0 var0 = var1 + str0;]
[var0.method0(method1()), var0.method0(method1()).method2(str0 + 
        var1 + str1 + var2.method3(), var2), var0.method0(), try {
      Type0 var0 = var1.method0().method1()
        .method2(var2);
      if (var0 == null) {
        throw new Type1(str0);
      }
      var3.method3(var0);
    } catch (Type1 var4) {
      var5.method4(method5()).method6(str1 + 
        var2 + str2 + var4.method7(), var4);
    }, var0.method0(var1), var0.method0().method1(), Type0 var0 = var1.method0().method1()
        .method2(var2);, Type0 var0 = var1 + str0;]
===========

now:23
now:24
now:25
now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
min
to
max
at line 125
Applied Change
update
method0
to
method0
from
6677_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/6677_0/after/Environment.java:
386
P:MethodInvocation{name},L:SimpleName{expression},R:SimpleName{arguments}
max
update
method0
to
method0
[]
[]
===========

now:1
Trigger tests - 1 Tests Failed.
=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
upperBound
to
lowerBound
at line 125
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
lowerBound
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
upperBound
to
value
at line 125
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
value
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
upperBound
to
v
at line 125
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
v
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
upperBound
to
that.lowerBound
at line 125
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
that.lowerBound
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
upperBound
to
that.upperBound
at line 125
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
135
P:FieldAccess{name},L:ThisExpression{expression},R:
that.upperBound
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

now:1
=========
Class:org.jfree.chart.renderer.GrayPaintScale
update
v
to
value
at line 125
Applied Change
update
var0
to
var0
from
9049_0:/home/hjs/dldoldam/gitclone/LetsPatch/LetsPatch_database/changedfile/hadoop/9049_0/after/DelegationTokenRenewer.java:
42
P:Assignment{leftHandSide},L:,R:MethodInvocation{rightHandSide}
value
update
var0
to
var0
[]
[final long var0 = var1 - var2.method0();, var0 = var1 + var2.method0()]
===========

A Patch Found! - patches/11/org/jfree/chart/renderer/GrayPaintScale.java
Candidate Number:106
Checked Lines:2
Checked Fix Locs:8
Checked Changes:54
Applied Changes:27
