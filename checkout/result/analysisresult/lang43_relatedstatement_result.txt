Loading Change Pool...Loading Class - org.apache.commons.lang.text.ExtendedMessageFormat
===buggy===
-statement-
append
-leftRS-
[]
-rightRS-
[]
===buggy===
-statement-
return appendTo == null ? null : appendTo.append(QUOTE);

-leftRS-
[]
-rightRS-
[]
===Candidate===
-change-
insert
var0.method0(0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[var0.method0(var1.method1()), var0.method0(0)]
result:fail
===Candidate===
-change-
insert
var0.method0(0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[var0.method0(var1.method1()), var0.method0(0)]
result:fail
===Candidate===
-change-
insert
var0.method0(0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[var0.method0(var1.method1()), var0.method0(0)]
result:fail
===Candidate===
-change-
insert
var0.method0(0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[var0.method0(var1.method1()), var0.method0(0)]
result:fail
===Candidate===
-change-
insert
var0.method0(0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[var0.method0(var1.method1()), var0.method0(0)]
result:fail
===buggy===
-statement-
return appendTo == null ? null : appendTo.append(QUOTE);

-leftRS-
[]
-rightRS-
[]
===Candidate===
-change-
insert
Type0 var0;
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[]
result:fail
===Candidate===
-change-
insert
Type0 var0;
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[]
result:fail
===Candidate===
-change-
insert
Type0 var0;
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[]
result:fail
===buggy===
-statement-
return appendTo == null ? null : appendTo.append(QUOTE);

-leftRS-
[]
-rightRS-
[]
===Candidate===
-change-
insert
var0.method0(str0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[method0(var0, var1)]
-rightRS-
[try {
      var0.method0();
    } catch (Type0 var1) {
      throw new Type1(var1.method1());
    }, new Type0(var0.method0()), Type0 var0 = var1.method0().method1(var2);, var0.method0()]
result:fail
===Candidate===
-change-
insert
var0.method0(str0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[method0(var0, var1)]
-rightRS-
[try {
      var0.method0();
    } catch (Type0 var1) {
      throw new Type1(var1.method1());
    }, new Type0(var0.method0()), Type0 var0 = var1.method0().method1(var2);, var0.method0()]
result:fail
===Candidate===
-change-
insert
var0.method0(str0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[method0(var0, var1)]
-rightRS-
[try {
      var0.method0();
    } catch (Type0 var1) {
      throw new Type1(var1.method1());
    }, new Type0(var0.method0()), Type0 var0 = var1.method0().method1(var2);, var0.method0()]
result:fail
===Candidate===
-change-
insert
var0.method0(str0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[method0(var0, var1)]
-rightRS-
[try {
      var0.method0();
    } catch (Type0 var1) {
      throw new Type1(var1.method1());
    }, new Type0(var0.method0()), Type0 var0 = var1.method0().method1(var2);, var0.method0()]
result:fail
===Candidate===
-change-
insert
var0.method0(str0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[method0(var0, var1)]
-rightRS-
[try {
      var0.method0();
    } catch (Type0 var1) {
      throw new Type1(var1.method1());
    }, new Type0(var0.method0()), Type0 var0 = var1.method0().method1(var2);, var0.method0()]
result:fail
===buggy===
-statement-
return appendTo == null ? null : appendTo.append(QUOTE);

-leftRS-
[]
-rightRS-
[]
===buggy===
-statement-
return appendTo == null ? null : appendTo.append(QUOTE);

-leftRS-
[]
-rightRS-
[]
===Candidate===
-change-
insert
method0(var0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[this.var0 = var1.method0(), var0.method0(var1, var2)]
result:fail
===Candidate===
-change-
insert
method0(var0)
-context-
P:IfStatement{statements},L:,R:ReturnStatement{statements}
-leftRS-
[]
-rightRS-
[this.var0 = var1.method0(), var0.method0(var1, var2)]
result:pass
lang43_done
